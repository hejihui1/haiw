<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>粤华珠宝</title>
      <link href="/post/3d29a05c.html"/>
      <url>/post/3d29a05c.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><u>简单介绍一下我目前从事的岗位及公司情况</u></p><h5 id="一、公司网店名称及运营平台："><a href="#一、公司网店名称及运营平台：" class="headerlink" title="一、公司网店名称及运营平台："></a>一、公司网店名称及运营平台：</h5><h6 id="拼多多店铺："><a href="#拼多多店铺：" class="headerlink" title="拼多多店铺："></a>拼多多店铺：</h6><p>链接货品：耳饰、貔貅、碎金、散珠(古法、光珠、钱币珠等)</p><p>直播卖货：可选规格</p><p><strong>1.锦橙传福珠宝</strong></p><p>关门了</p><p><strong>2.小胖传福珠宝</strong></p><p>关门了</p><p><strong>3.欢彩珠宝(还有一个官方旗舰店)</strong></p><p>不确定是否会关门，目前在营业。</p><p><strong>4.墨谦珠宝(还有一个2号店)</strong></p><p>新店正常营业</p><h6 id="淘宝店铺："><a href="#淘宝店铺：" class="headerlink" title="淘宝店铺："></a>淘宝店铺：</h6><p>直播卖货：手链、项链、散珠、吊坠等</p><p>业务：支持旧换或者回收</p><p><strong>锦橙传福珠宝</strong></p><p>营业中…</p><h5 id="二、人员及上班情况："><a href="#二、人员及上班情况：" class="headerlink" title="二、人员及上班情况："></a>二、人员及上班情况：</h5><p>1.公司上班时间：</p><p>早班 9点1-8点30，吃饭休息一小时。</p><p>中班 11点-20点30，吃饭休息一小时。</p><p>晚班 1点-22点30，吃饭休息一小时。</p><p>2.公司岗位：</p><p>1.客服</p><p>2.仓储</p><p>3.主播</p><p>八月分排班表：</p><img src="/post/3d29a05c/8yue.png" class=""><p>九月份排班表：</p><img src="/post/3d29a05c/9yue.png" class=""><p>3.客服岗位工作内容：</p><p>售前、售后：不区分</p><p>平台：淘宝、拼多多</p><p>拼多多售前：保真问题、不同货品基础规格问题、发货时间问题、物流问题。</p><p>拼多多售后：退换货、退货退款、克重补差、处理一些工单问题。</p><p>淘宝售前：物流问题、基础货品规格问题、引导客户下单改价备注货品编号、备注客户需求、旧换或者回收咨询、引导直播间选购、戒指、手镯圈号测量、手围珠子颗数估算、货品保真问题等。</p><p>淘宝售后：货品瑕疵、变形或者本身产品设计这样，客户以为这儿有问题。退换货、退货退款。</p><p>淘宝关于旧换和回收业务：</p><p>旧换：足金999一克抵一克，0损耗。</p><p>旧金不分工艺，根据新款的工艺(软金25、硬金30、cnn35、古法40、无氢/5G50)克重以及旧金火烧后的克重结算。</p><p>旧换方式：</p><p>1.全款付，收到旧金后结算退差价(订单申请退款、二维码退款)</p><p>2.先寄旧金，定金备注留货，收到旧金后结算。旧金多，退差价，旧金少，补差价。</p><p>具体计算根据旧金克重以及新款克重及工艺计算</p><p>旧换订单不包邮，未发货的，可以和全款的一起发，免邮。</p><p>旧换订单3000以上的，默认发顺丰。</p><p>旧换款式不支持退换货的。</p><p>旧换备注留货的不能再更改款式。</p><p>新款多种工艺的旧换：</p><p>旧金少：补金子按最低克价</p><p>算工费是克重多的先算工费，克重少的减去新金旧金差再算工费。</p><p>回收问题：</p><p>按收到货的当天的回收价*旧金火检后的克重</p><p>检验问题：</p><p>足金999，火检，颜色亮橙色，烧完之后是亮黄色，这种纯度最好，纯度差点的会有灰色杂质。</p><p>18K：质检，备注电话、克重</p><h5 id="三、干了一个多月的客服感受："><a href="#三、干了一个多月的客服感受：" class="headerlink" title="三、干了一个多月的客服感受："></a>三、干了一个多月的客服感受：</h5><p>关于客服岗位心得：工资普普通通、容易影响心态、属于是混吃等死毫无上升空间，短期内过渡可以，长期不会有大的提升。</p><p><strong>这个岗位要求：产品知识及业务熟练、良好的服务意识、键盘打字快、能抗住压力(低素质客户俗称网络喷子还是很多)</strong></p><p>后续更新公司运作情况、盈利模式及家族产业管理等……….</p><p>每一份工作都是经历，是成长。从中汲取的经验可以分享给大家，也是人生的乐趣，知足常乐，品味人生，抑或是少走弯路，愿每个平凡的人都有一份自己喜欢的工作，我是写手-派大星，期待下一次的更新。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 黄金饰品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>冷面天使漫画</title>
      <link href="/post/8ee5a6f2.html"/>
      <url>/post/8ee5a6f2.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>介绍:校园里的暴力本与一个善良的少年无关,但这位少年长着恶魔的面孔,课堂像地狱一样令学生和老师充满紧张。街道上的行人见到他,无不是避让躲开。 　　转学第一天便被不良少年盯上,来挑战的无不被他的脸孔震慑,然而他的话总被误会成挑畔。由于他的面孔加上误会,第一天便当上了学校老大,其实本人不会打架,但是因经常被卷入暴力事件而耐打力超强,同时推人的招术又莫名其妙地具有威力,往往一击便KO……</p><hr><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220511144130861.png"></p><p>转载网址：<a href="https://m.dmzj.com/info/lmts.html">https://m.dmzj.com/info/lmts.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 漫画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jmeter接口测试</title>
      <link href="/post/b31ed0cf.html"/>
      <url>/post/b31ed0cf.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="一、接口测试目的"><a href="#一、接口测试目的" class="headerlink" title="一、接口测试目的"></a>一、接口测试目的</h4><p>接口测试会更早的发现bug，而使得修改bug的成本更低，接口测试会减少功能测试的时间，应该接口测试会确保主要流程功能的正确性，能减少回归测试的次数。</p><hr><p>接口测试类型： <strong>模块接口测试</strong>和<strong>web接口测试</strong></p><p>模块接口测试一般为程序内部模块之间相互调用的内部测试，常被应用在单元测试中，俗称白盒测试（通常是开发完成的）</p><p>Web接口测试一般为程序外部测试，也就是黑盒测试，不需要关注内部实现，只需要关注输入输出是否符合预期结果。</p><p>API函数是一种接口，一般开放平台都会对外提供API函数，以供第三方程序调用</p><hr><p>web接口测试：<strong>服务器接口测试</strong>和<strong>外部接口测试</strong></p><p>服务器接口测试：测试浏览器与服务器的接口</p><p>这个很容易理解，我们知道web开发一般分前端和后端，前端开发人员用html/css/javascript等技术。后端开发人用php/java/python/c#等各种语言。用户输入的数据是输入到的前端页面上，怎样把这些数据传递的后台的呢？通过http协议的get与post请求来实现前后端的数据传递。这就是接口测试，调用的登录接口还是查询接口，传参的是用户密码还是搜索关键字。</p><p>外部接口测试：</p><p>这个很典型的例子就是第三方登录，比如你做的新系统免于新用户重新注册的麻烦会提供第三方登录，那用户在登录的时候调用的就是第三方登录的接口，由第三方验证用户名和密码并且返回给当前系统。</p><hr><p>web接口测试有哪些测试要点：</p><p>1、请求是否正确，默认请求成功是200，如果请求错误也应当返回404、500等。</p><p>2、检查返回数据的正确性与格式，json是一种非常创建的格式。</p><p>3、接口的安全性，一般web都不会暴露在网上任意被调用，需要做一些限制，比如鉴权或认证。例如禁止SQL注入。</p><p>4、接口的性能，web接口同样注重性能，这直接影响用户的使用体验。如果我搜索一个关键字半天结果都没返回，则说明接口代码需要优化。</p><h4 id="二、接口测试流程"><a href="#二、接口测试流程" class="headerlink" title="二、接口测试流程"></a>二、接口测试流程</h4><p>接口示例：</p><p><a href="http://ams.wonderbuy.xyz/rs/product/getHomeList">http://ams.wonderbuy.xyz/rs/product/getHomeList</a></p><p><a href="http://amsseller.wonderbuy.xyz/rs/store/getStore?storeId=4&amp;pn=1&amp;ps=10">http://amsseller.wonderbuy.xyz/rs/store/getStore?storeId=4&amp;pn=1&amp;ps=10</a></p><p>比如这个接口地址：</p><p>storeId=1表示商店为1的那个店；</p><p>pn=1即page number=1 意思为第一页；</p><p>ps=10即page sum =10 意思为每页展示10条记录;</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220509121546732.png"></p><p>怎么做接口测试：</p><p>1.首先获取开发的接口文档</p><p>2.熟悉每个接口是干什么的，每个参数的意义，以及多个参数组合的意义，以及组合参数应该返回什么样的数据是对的，以及分析错误状态码。</p><p>3.在URL里面直接输入请求的接口地址和参数就可以查看服务器返回的json格式数据，然后检查返回的列表中的数据是否准确(检查数据展示及状态码是否准确)，这只限于get请求方式。另外也可以使用jmeter工具对get或是post请求方式，做接口测试。</p><p>步骤：添加线程组，再添加http请求，在http请求中设置服务器地址，端口，路径，请求方式，设置参数及参数值，添加查看结果树，执行这个请求，然后在查看结果树的响应部分查看核对json数据，检查数据展示或是数据状态是否准确。</p><h4 id="三、接口文档示例："><a href="#三、接口文档示例：" class="headerlink" title="三、接口文档示例："></a>三、接口文档示例：</h4><p>1:获取商品信息接口</p><p>接口地址：</p><p><a href="http://amsseller.wonderbuy.xyz/rs/store/getStore">http://amsseller.wonderbuy.xyz/rs/store/getStore</a></p><p>请求方式：get</p><p>请求参数：</p><p>storeId：门店ID</p><p>pn：第几页</p><p>PS：每页显示多少条记录</p><p> 状态码：</p><p>200：响应成功</p><p>20001：门店信息错误</p><p>20002：没有对应的数据</p><p>20003：网络异常</p><p><strong>举例：</strong></p><p>罗湖店：1  90</p><p>宝安店：2  100</p><p>福田店：3  200</p><p><a href="http://amsseller.wonderbuy.xyz/rs/store/getStore?storeId=2&amp;pn=10&amp;ps=10">http://amsseller.wonderbuy.xyz/rs/store/getStore?storeId=2&amp;pn=10&amp;ps=10</a></p><p>显示宝安店的第10也的10条数据：91-100</p><p><a href="http://amsseller.wonderbuy.xyz/rs/store/getStore?storeId=2&amp;pn=11&amp;ps=10">http://amsseller.wonderbuy.xyz/rs/store/getStore?storeId=2&amp;pn=11&amp;ps=10</a></p><p>①  没有对应数据；②默认给最前/最后一页的数据</p><p><a href="http://amsseller.wonderbuy.xyz/rs/store/getStore?storeId=4&amp;pn=10&amp;ps=10">http://amsseller.wonderbuy.xyz/rs/store/getStore?storeId=4&amp;pn=10&amp;ps=10</a></p><p>①  门店信息错误；②给默认的门店信息</p><p>请求示例：</p><p><a href="http://amsseller.wonderbuy.xyz/rs/store/getStore?storeId=2&amp;pn=10&amp;ps=10">http://amsseller.wonderbuy.xyz/rs/store/getStore?storeId=2&amp;pn=10&amp;ps=10</a></p><p> 响应格式：</p><p>{</p><p>:  “trxrc”:20001,</p><p>:  “state”:</p><p>:  {</p><p>:  :  “code”:200,</p><p>:  :  “msg”:”ok”</p><p>:  },</p><p>:  “storeName”:”Twireless”,</p><p>:  “storeEmail”:”<a href="mailto:joejustinesia@gmail.com">joejustinesia@gmail.com</a>“,</p><p>:  “storeMobile”:”09178313838”,</p><p>:  “storeImage”:”<a href="http://data.wonderbuy.xyz/20161129/store/img/64f16c09ebe5e83318408ba8192531cd.jpg&quot;">http://data.wonderbuy.xyz/20161129/store/img/64f16c09ebe5e83318408ba8192531cd.jpg"</a>,</p><p>:  “commodityList”:</p><p>:  [</p><p>:  :  {</p><p>:  :  :  “id”:2085,</p><p>:  :  :  “modelId”:2085,</p><p>:  :  :  “modelName”:”Planet CCTV AHD425 Dome Cam 1080P IR”,</p><p>:  :  :  “inventory”:9,</p><p>:  :  :  “price”:”2,850.00”,</p><p>:  :  :  “moneyTag”:”PHP”,</p><p>:  :  :  “itemIconUrl”:”<a href="http://data.wonderbuy.xyz/20170324/model/logo/315cc948878b1073b15196d6c340c24b.jpg&quot;">http://data.wonderbuy.xyz/20170324/model/logo/315cc948878b1073b15196d6c340c24b.jpg"</a></p><p>:  :  },</p><h4 id="四、接口测试用例模板"><a href="#四、接口测试用例模板" class="headerlink" title="四、接口测试用例模板"></a>四、接口测试用例模板</h4><p>接口名称、用例编号、用例说明、请求参数、请求方法、请求地址、请求头部信息、预期响应状态、测试结果</p><p>以查询接口为例：</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220509124040866.png"></p><p>以注册接口为例：</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220509124141055.png"></p><h4 id="五、jmeter接口测试步骤："><a href="#五、jmeter接口测试步骤：" class="headerlink" title="五、jmeter接口测试步骤："></a>五、jmeter接口测试步骤：</h4><p><strong>1、</strong> <strong>添加线程组</strong>：在“测试计划”上点击鼠标右键–&gt;添加–&gt;threads(Users)–&gt;线程组，添加测试场景设置组件，（接口测试中一般设置为1个“线程数”，根据测试数据的个数设定“循环次数”，接口性能测试是并发测试，因此一般就设置多个线程数）</p><p><strong>2、</strong> <strong>再在“线程组”下面添加一个HTTP cookie管理器</strong></p><p>Cookie 管理器就像一个 web 浏览器那样存储并发送 cookie, 一个测试计划内最好只有一个cookie manager, 没有cookie管理器，登录后的用户名admin就显示不了</p><p><strong>3、</strong> <strong>添加Http请求默认值组件</strong></p><p> HTTP默认请求值： 当所有的接口测试的访问域名和端口都一样时，可以使用该元件，一旦服务器地址变更，只需要修改请求默认值即可。</p><p>在“HTTP 请求默认值”组件配置页面，填写：</p><p>被测系统的域名、端口、http请求的实现包版本、协议类型</p><p>后续添加的线程组里的所有“HTTP Sampler”可默认使用此设置。</p><p><strong>4、</strong> <strong>添加接口的请求，线程组</strong>–&gt;HTTP请求</p><p>在HTTP请求设置页面，录入被测接口的详细信息，包括请求路径，对应的请求方法，以及随请求一起发送的参数列表</p><p>注：由于Jmeter请求线程组内的请求时从第一个开始执行，所以我们将需要最先执行的请求放在前面</p><p>后续继续添加其它请求，如果提交的请求中参数带有中文字符，就讲字符编码设置为GBK，就不会乱码了</p><p><strong>5、</strong> <strong>接下来，可以参数化、关联、添加事务，集合点</strong> <strong>、查看结果树、聚合报告等等运行测试</strong></p><p><strong>（最简单的接口测试，可以直接添加一个查看结果树、聚合报告就可以测试了）</strong></p><p>那么仅仅是状态码ok了，就表明返回数据一定是正确的吗？ 不一定，我们还得通过在返回</p><p>的页面中检查部分数据是否符合正确预期结果，那么就是检查有没有出现欢迎xxx登录了，这个可以通过接口文档查得（或者问开发），这里是admin用户登录</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220509143520125.png"></p><p><strong>接口测试步骤：</strong></p><p><strong>1:熟悉接口定义文档，获得接口功能描述、接口请求方式、请求URL、请求参数、返回参数以及状态码信息等（从接口说明文档中整理出接口测试点）</strong></p><p><strong>2:写接口测试用例（主要的接口业务）</strong></p><p><strong>3:编写接口脚本（就是使用jmeter编写脚本，添加查看结果树）</strong></p><p><strong>4:在接口测试工具（Jmeter）执行接口测试用例</strong></p><p><strong>5:分析查看结果树中接口测试返回的结果及状态</strong> </p>]]></content>
      
      
      
        <tags>
            
            <tag> jmeter </tag>
            
            <tag> 接口测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typroa云笔记及主题背景图更换</title>
      <link href="/post/ad8794b2.html"/>
      <url>/post/ad8794b2.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>Typroa+坚果云搭建云笔记：</strong></p><h5 id="一、下载坚果云：https-www-jianguoyun-com"><a href="#一、下载坚果云：https-www-jianguoyun-com" class="headerlink" title="一、下载坚果云：https://www.jianguoyun.com"></a>一、下载坚果云：<a href="https://www.jianguoyun.com/">https://www.jianguoyun.com</a></h5><p>1.注册及登录(很简单)</p><p>2.同步方法</p><p>方法1：</p><p>在坚果云创建本地文件夹，直接同步</p><p>方法2：</p><p>在本地新建文件夹，右键选择坚果云同步</p><p>方法3：</p><p>打开坚果云，拖动本地文件夹到坚果云实现同步</p><h5 id="二、typroa下载安装不再说明，很简单"><a href="#二、typroa下载安装不再说明，很简单" class="headerlink" title="二、typroa下载安装不再说明，很简单"></a>二、typroa下载安装不再说明，很简单</h5><h5 id="三、实现typroa同步到坚果云"><a href="#三、实现typroa同步到坚果云" class="headerlink" title="三、实现typroa同步到坚果云"></a>三、实现typroa同步到坚果云</h5><p>直接在文件中，打开文件夹，选择你在坚果云同步的那个文件夹，比如我的：</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220506232033433.png"></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220506232409267.png"></p><p>总之打开typroa文件，选择在坚果云同步的文件夹下面新建文件夹或者文件都是可以直接同步到坚果云，实现了typroa+坚果云同步云笔记。</p><h5 id="四、typroa更换主题"><a href="#四、typroa更换主题" class="headerlink" title="四、typroa更换主题"></a>四、typroa更换主题</h5><p>1.打开文件—选择偏好设置–选择外观–选择获取主题</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220506232950296.png"></p><p>2.比如我选择的主题，点击下载，下载完直接解压：</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220506233121053.png" alt="image-20220506233121053"></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220506233158197.png"></p><p>3.完了，打开文件–偏好设置–外观–选择打开主题文件夹</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220506233340283.png" alt="image-20220506233340283"></p><p>4.将解压后的文件夹复制到刚打开的文件夹下面</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220506233551664.png"></p><p>5.之后保存，退出typroa，再次打开，切换主题就可以了</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220506233706749.png"></p><h5 id="五、typroa更换背景图片："><a href="#五、typroa更换背景图片：" class="headerlink" title="五、typroa更换背景图片："></a>五、typroa更换背景图片：</h5><p>参考：我的背景：</p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220506234008304.png" alt="我的背景图" style="zoom:80%;"><p>1.在刚才下载的主题文件里，将gitlab.css文件(参考我的)复制到外面主题配置文件夹下</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220506234420720.png"></p><p>2.在主题文件下面创建一个放背景图片的文件夹image</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220506234831349.png"></p><p>3.打开gitlab.css文件，在<strong>：root</strong>下面添加一行背景图片代码</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220506234554986.png"></p><p>图片颜色过重，遮挡笔记字体颜色，opacity可以调节透明度。</p><blockquote><p>opacity: 0.5;//值为0~1中间的一个数，比如我设置的是0.5，那么就将图片改为原来图片的一半透明度，我是不小心设置错了不过问题不大。</p></blockquote><p>4.还有一种办法解决图片颜色过重，遮挡字体，就是用ps直接p图</p><p>可以参考：<a href="https://blog.csdn.net/Black_Customer/article/details/108693815">https://blog.csdn.net/Black_Customer/article/details/108693815</a></p><p>以上就是typroa+坚果云实现云笔记，及typroa主题及背景图更换的所有教程。</p><p>本文有关博客参考：<a href="https://blog.csdn.net/Black_Customer/article/details/108693815">https://blog.csdn.net/Black_Customer/article/details/108693815</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 坚果云 </tag>
            
            <tag> typroa背景图 </tag>
            
            <tag> 云笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客看板娘美化</title>
      <link href="/post/afb9f832.html"/>
      <url>/post/afb9f832.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>效果展示：</p><p><a href="https://hejihui1.github.io/">我的博客</a></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220505212226699.png"></p><p><strong>一、hexo matery/next主题简单版安装：</strong></p><p>hexo支持看板娘功能，已经封装好了插件，但只是模型，不能说话、不能换装、功能较少。</p><p>1.安装插件命令：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">npm install --save hexo-helper-live2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://www.cnblogs.com/Friends-A/p/11054968.html#_10">看板娘模型预览</a></p><p>2.选择一个自己喜欢的模型下载</p><pre class="line-numbers language-none"><code class="language-none">npm install live2d-widget-model-z16 --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.在<strong>站点配置文件</strong>或者<strong>主题配置</strong>配置live2d</p><pre class="line-numbers language-text" data-language="text"><code class="language-text"># Live2D## https://github.com/EYHN/hexo-helper-live2dlive2d:  enable: true  # enable: false  scriptFrom: local # 默认  pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径)  pluginJsPath: lib/ # 脚本文件相对与插件根目录路径  pluginModelPath: assets/ # 模型文件相对与插件根目录路径  # scriptFrom: jsdelivr # jsdelivr CDN  # scriptFrom: unpkg # unpkg CDN  # scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url  tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中  debug: false # 调试, 是否在控制台输出日志  model:    use: live2d-widget-model-wanko # npm-module package name    # use: wanko # 博客根目录/live2d_models/ 下的目录名    # use: ./wives/wanko # 相对于博客根目录的路径    # use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url  display:    position: right    width: 150    height: 300  mobile:    show: true # 手机中是否展示<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完了重新运行一下就OK。</p><p><strong>二、进阶版（能说话、能换装、能玩游戏、能拍照）</strong></p><p>相信不用我说你们都知道该配置哪一个了吧，具体教程如下：</p><p>安装进阶版需要先卸载掉之前安装的插件：</p><pre class="line-numbers language-none"><code class="language-none">npm uninstall hexo-helper-live2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>1.下载大神的配置，git bash直接下载到\themes\next\source目录下</p><p><a href="https://github.com/stevenjoezhang/live2d-widget">下载地址</a></p><p>2.修改autoload.js文件，将路径改为绝对路径</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">const live2d_path = "https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/";改为const live2d_path = "/live2d-widget/";在文件中去掉注释就行了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>截图：</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220505214010635.png"></p><p>3.matery主题：在<code>\themes\hexo-theme-matery\layout\_partial\head.ejs</code>文件中，新增以下内容：</p><p>放在&lt; head&gt;中，&lt; /head&gt;之前就行。</p><pre class="line-numbers language-none"><code class="language-none">&lt;script src="https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"&gt;&lt;/script&gt;&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css"/&gt;&lt;script src="/live2d-widget/autoload.js"&gt;&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>next主题：在<code>/themes/next/layout/_layout.swing</code>文件中，还是新增上面的内容，位置都一样。</p><p>然后重新运行<code>hexo clean</code>，<code>hexo g</code>,可以预览，没有问题再部署上去。</p><p>4.修改看板娘大小、位置、格式、文本内容等，可查看并修改 waifu-tips.js 、 waifu-tips.json 、waifu.css文件。</p><pre class="line-numbers language-none"><code class="language-none">文件说明：autoload.js:    自动加载看板娘；waifu.css:      看板娘样式；waifu-tips.js:  看板娘说话的脚本；waifu-tips.json:看板娘说话的内容；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> hexo matery </tag>
            
            <tag> hexo next </tag>
            
            <tag> 看板娘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云COS+PicGo+Typora</title>
      <link href="/post/b8a65fcd.html"/>
      <url>/post/b8a65fcd.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>前言：由于gitee服务器现在加了防盗链，已经不能再作为图床使用，现在另寻一种途径来搭建我们的图床，推荐使用腾讯云COS+PicGo+Typora来构建图床，方便使用。由于自己写博客经常要用到图片，使用本地图片插入特别不便捷，还要占用电脑内存，生成的博客由于图片太多而导致页面加载缓慢，很影响使用，所以使用图床，直接应用图片非常好用，访问快速，不消耗内存。</p><hr><p><strong>搭建步骤：</strong></p><h5 id="一、PicGo下载安装，上篇博客有方法，不在说明。"><a href="#一、PicGo下载安装，上篇博客有方法，不在说明。" class="headerlink" title="一、PicGo下载安装，上篇博客有方法，不在说明。"></a>一、PicGo下载安装，上篇博客有方法，不在说明。</h5><h5 id="二、腾讯云注册、登录、创建存储桶"><a href="#二、腾讯云注册、登录、创建存储桶" class="headerlink" title="二、腾讯云注册、登录、创建存储桶"></a>二、腾讯云注册、登录、创建存储桶</h5><p><strong>1.自行注册</strong></p><p>官网：<a href="https://cloud.tencent.com/">https://cloud.tencent.com/</a></p><p><strong>2.注册完，百度腾讯云，点击对象存储COS</strong>(或者登录后进入，都一样)</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220502143124982.png"></p><p><strong>2.进入页面点击购买资源包(很便宜，一年几十块完全够用)</strong></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220502143253790.png"></p><p><strong>3.购买后，进入创建存储桶</strong></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220502143632953.png"></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220502143726965.png"></p><p><strong>4.添加密钥</strong></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220502143838048.png"></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220502143919625.png"></p><h5 id="三、配置PicGo"><a href="#三、配置PicGo" class="headerlink" title="三、配置PicGo"></a>三、配置PicGo</h5><p><strong>1.图床设置</strong></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220502144257215.png"></p><p>Secretld：之前设置的密钥id</p><p>SecretKey：之前设置的密钥key</p><p>APPID：存储桶名字后面的那串数字</p><p>存储空间名：是创建存储桶的名称</p><p>存储区域：是你创建存储桶所属地域</p><p>指定存储路径：随便自定义</p><p>COS版本：我选的是v5</p><p><strong>2.PicGo设置–勾选腾讯云</strong></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220502144825090.png"></p><p><strong>3.上传区选择腾讯云，上传一张图片</strong></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220502144942565.png"></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220502145607905.png"></p><p>这里我们PicGo跟<a href="https://l.gushuji.site/tencent">腾讯云</a>COS之间的上传服务就设置好了，你可以测试一下，上传一张图片就可以看到<a href="https://l.gushuji.site/tencent">腾讯云</a>COS上就有了，速度很快。</p><h5 id="四、关联Typora与PicGo，打开Typora-文件-gt-偏好设置"><a href="#四、关联Typora与PicGo，打开Typora-文件-gt-偏好设置" class="headerlink" title="四、关联Typora与PicGo，打开Typora 文件->偏好设置"></a>四、关联Typora与PicGo，打开Typora 文件-&gt;偏好设置</h5><p>设置好点击验证图片上传选项</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220502145114469.png"></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/image-20220502145855082.png"></p><p>最后在腾讯云cos存储桶上查看，会有Typora的icon图片，说明上传成功。</p><p>说明：在Typora上这样设置，当我们插入一张图片时，会自动帮我们存储到腾讯云cos存储桶，并给图片添加外链，直接可以引用。</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 图床 </tag>
            
            <tag> PicGo+腾讯云COS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>monkey压力测试</title>
      <link href="/post/eeb24ce7.html"/>
      <url>/post/eeb24ce7.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="一、monkey简介"><a href="#一、monkey简介" class="headerlink" title="一、monkey简介"></a>一、monkey简介</h4><p>monkey是Android系统的一个命令行工具，可以运行在模拟器、手机设备中。它向系统或软件发送伪随机的用户事件流(如键盘输入、触摸屏输入、手势输入、鼠标输入等），实现对正在开发的APP应用程序进行压力性能测试。</p><p>通过monkey程序模拟用户操作，检测程序多久的时间会发生异常。</p><p>monkey测试是一种测试软件稳定性、健壮性的快速有效的方法。<br>monkey测试目前被大规模应用在APP开发企业。</p><h4 id="二、monkey环境配置"><a href="#二、monkey环境配置" class="headerlink" title="二、monkey环境配置"></a>二、monkey环境配置</h4><p>monkey是基于Android 的需要配置<strong>SDK环境</strong>，一个安卓APP测试工具。<br>运行monkey，除此之外还需要配置<strong>JDK环境</strong>。</p><p>money由ADB启动。</p><p>ADB（Android Debug Bridge）<br>安卓调试桥，实质是安卓的调试工具。<br>Adb是android sdk包里面的一个工具, 可以在电脑上建立一个连接到手机的通道，用ADB可以直接操作管理android模拟器或者真实的android设备</p><p>ADB主要功能：</p><p>运行设备的shell(命令行)<br>管理模拟器或设备的端口映射 （ADB的端口是5037， emulator 的默认端口是5554， adb 会搜索 5555 – 5683 范围内的端口，发现有打开的端口就会认为存在模拟器）<br>计算机和设备之间上传/下载文件<br>将本地apk软件安装至 模拟器 或android设备</p><p>SDK和JDK简介</p><p>SDK包：<br>SDK  (Soft Development Kit ):<br>软件开发工具包，在Android中，它为开发者提供了库文件以及其它开发所用到的工具。<br>被软件开发工程师用于为特定的软件包、软件设计、硬件平台、操作系统等建立应用软件的开发工具的集合</p><p>Android SDK 指的是Android专属的软件开发工具包。<br>Android SDK 采 用了java语言，所以需要先安装JDK 5.0及以上版本。<br>Android SDK 不用安装，下载后，直接解压即可。</p><p>JDK包：<br>JDK(Java Development Kit)<br> Java 语言的软件开发工具包, 包括了Java运行环境JRE (JVM等)、Java工具 (javac/java/jdb等) 和Java基础类库。 </p><p>Android  SDK 下载地址： <a href="http://tools.android-studio.org/">http://tools.android-studio.org</a></p><p>解压Android SDK文件，里面有两个应用程序：</p><p>SDK Manager.exe    —-负责下载或更新不同版本的SDK包<br>AVD Manager.exe     —SDK自带的安卓模拟器</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a1.png"></p><p><strong>ADB环境变量配置</strong></p><p>找到SDK里面的adb.exe，新版本是在platform-tools目录，假定所在路径为F:\SDKTOOLS\android-sdk-24.4-windows\platform-tools</p><p>右键我的电脑 - 【属性】 - 【高级系统设置】 – 【高级】 ，点击【环境变量】<br>在弹出窗口中找到【系统变量】，双击【path】，在编辑框最末处添加路径; F:\SDKTOOLS\android-sdk-24.4-windows\platform-tools<br>(注意每个变量之间需要用分引号；隔开，最后面的变量可不加；）</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a2.png"></p><p><strong>JDK环境变量配置</strong></p><p>参考教程：<a href="https://blog.csdn.net/w2687713610/article/details/118936267">https://blog.csdn.net/w2687713610/article/details/118936267</a></p><p>monkey测试环境</p><p>模拟器、真机</p><h4 id="三、ADB命令"><a href="#三、ADB命令" class="headerlink" title="三、ADB命令"></a>三、ADB命令</h4><p>登录设备命令：adb devices (进入adb 检查模拟器是否上线)</p><p>进入模拟器操作系统：adb shell     （adb不区分大小写，但shell区分）</p><p>当存在多个模拟器时，进入任一模拟器方式：adb –s 设备名称 shell</p><p>启动ADB服务： adb start-server<br>停止ADB服务： adb kill-server</p><h5 id="1-查看Android程序包"><a href="#1-查看Android程序包" class="headerlink" title="1.查看Android程序包"></a>1.查看Android程序包</h5><p>方法1：</p><p>获取手机内所有apk对应的包名和路径<br>adb shell pm list package -f</p><p>方法2：</p><p>先打开需要查找的apk后，再敲入以下命令    （真机支持）<br> adb shell dumpsys window w | findstr name=</p><p>方法3：</p><p>将系统所有当前运行的activity（程序）输出到本地目录<br> adb shell dumpsys activity &gt; E:\Android\AppName\namelog.txt</p><p>方法4：</p><p>直接在蓝叠的RE管理器看(以蓝叠模拟器为例)</p><p><strong>2.安装和卸载Apk包命令</strong></p><p>安装：adb install  本地路径.apk</p><p>卸载：adb uninstall 程序包名</p><p><strong>3.pc发送文件到安卓模拟器</strong></p><p>从PC上发送文件到安卓模拟器：Adb push 本地路径\filename   远程路径（非根目录）</p><p>先在模拟器的SD外置卡建一个mydata目录：Adb shell mkdir /sdcard/mydata</p><p>(注意：不能在模拟器根目录 ”/” 下新建文件夹，也不能直接adb push 文件到模拟器根目录</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a3.png"></p><p>从安卓模拟器下载文件到电脑</p><p>Adb pull 远程路径/ filename   本地路径（不能直接D盘，D盘下的某一个目录）</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a4.png"></p><h4 id="四、monkey参数及用法"><a href="#四、monkey参数及用法" class="headerlink" title="四、monkey参数及用法"></a>四、monkey参数及用法</h4><p>monkey启动方式：adb shell monkey {+命令参数}</p><p><strong>-p</strong> &lt;测试的包名列表&gt; </p><p>用此参数指定一个或多个包。指定包之后，monkey将只允许系统启动指定的app。如果不指定包， monkey将允许系统启动设备中的所有app。 </p><p>指定一个包：adb shell monkey -p 程序名称 100<br>指定多个包：adb shell monkey –p 程序名称1 –p 程序名称2 100 </p><p>示例： adb shell monkey -p com.android.calculator2  -p com.android.calendar 100 </p><blockquote><p>说明：程序名称为包名，100是事件计数（即让Monkey程序模拟 100次随机用户事件）</p></blockquote><p><strong>-v</strong><br>用于指定反馈信息级别（信息级别就是日志的详细程度），总共分3个级别，分别对应的参数如下所示：<br>示例： </p><p>Level 0 : adb shell monkey -p com.android.calculator2 -v 100<br>// 缺省值，仅提供启动提示、测试完成和最终结果等少量信息 </p><p>Level 1 : adb shell monkey -p com.android.calculator2 -v -v 100<br>// 提供较为详细的日志，包括每个发送到Activity的事件信息</p><p>Level 2 : adb shell monkey -p com.android.calculator2 -v -v -v 100<br>// 最详细的日志，包括了测试选中/未选中的Activity信息</p><p><strong>-s</strong><br>随机数种子，用于指定伪随机数生成器的seed值，如果seed相同，则两次Monkey测试所产生的事件序列也相同的。（重复上次一样的操作）。<br>示例：</p><p>测试1：adb shell monkey -p com.android.calculator2 –s 10 -v 100 </p><p>测试2：adb shell monkey -p com.android.calculator2 –s 10 100 </p><p>–throttle &lt;毫秒&gt;<br>在事件之间插入固定延迟。通过这个选项可以减缓 Monkey 的执行速度。如果不指定该选项， Monkey 将不会被延迟，事件将尽可能快地被执行完成。</p><p>示例：adb shell monkey -p com.android.calculator2 –throttle 3000  -v 100 </p><blockquote><pre><code>       该参数应放在事件数前面 （人的思考时间是300毫秒一个动作）</code></pre></blockquote><h4 id="五、monkey事件"><a href="#五、monkey事件" class="headerlink" title="五、monkey事件"></a>五、monkey事件</h4><p>0：触摸事件百分比          参数–pct-touch</p><p>1：滑动事件百分比          参数–pct-motion</p><p>2：缩放事件百分比          参数–pct-pinchzoom</p><p>3：轨迹球事件百分比       参数–pct-trackball</p><p>4：屏幕旋转事件百分比   参数–pct-rotation </p><p>5：基本导航事件百分比   参数–pct-nav</p><p>6：主要导航事件百分比   参数–pct-majornav</p><p>7：系统事件百分比           参数–pct-syskeys</p><p>8：Activity启动事件百分比      参数–pct-appswitch</p><p>9：键盘翻转事件百分比    参数–pct-flip</p><p>10：其他事件百分比          参数–pct-anyevent</p><h4 id="六、monkey运行调试约束参数"><a href="#六、monkey运行调试约束参数" class="headerlink" title="六、monkey运行调试约束参数"></a>六、monkey运行调试约束参数</h4><table><thead><tr><th>- -hprof</th><th>设置此选项，将在Monkey事件序列之前和之后立即生成profiling报告。这将会在data/misc中生成大文件(~5Mb)，所以要小心使用它，不常用。</th></tr></thead><tbody><tr><td>- -ignore-crashes</td><td>当应用程序崩溃或发生任何失控异常时，Monkey将停止运行。如果设置此选项，Monkey将继续向系统发送事件，直到计数完成。</td></tr><tr><td>- -ignore-timeouts</td><td>当应用程序发生任何超时错误(如“Application Not Responding”对话框)时，Monkey将停止运行。如果设置此选项，Monkey将继续向系统发送事件，直到计数完成。</td></tr><tr><td>- -ignore-security-exceptions</td><td>当应用程序发生许可错误(如启动一个需要某些许可的Activity)时，Monkey将停止运行。如果设置了此选项，Monkey将继续向系统发送事件，直到计数完成。</td></tr><tr><td>- -kill-process-after-error</td><td>当Monkey由于一个错误而停止时，出错的应用程序将继续处于运行状态。当设置了此选项时，将会通知系统停止发生错误的进程。</td></tr><tr><td>- -monitor-native-crashes</td><td>监视并报告Android系统中本地代码的崩溃事件。如果设置了–kill-process-after-error，系统将停止运行。</td></tr><tr><td>- -wait-dbg</td><td>停止执行中的Monkey，直到有调试器和它相连接。</td></tr></tbody></table><h4 id="七、monkey真机测试"><a href="#七、monkey真机测试" class="headerlink" title="七、monkey真机测试"></a>七、monkey真机测试</h4><p>1： 使用USB数据线连接PC和手机<br>2： 安装手机驱动程序<br>3： 允许USB调试 - - 确定<br>4： 输入adb devices<br>5： 找到所测试的APP的包名<br>6： 执行monkey命令</p><p><strong>monkey日志分析</strong></p><pre class="line-numbers language-none"><code class="language-none">C:\Users\Administrator&gt;adb shell monkey -p com.android.calculator2 -v –v -v 10:Monkey: seed=1476026024055 count=10 //伪随机种子为1476026024055，事件总数10:AllowPackage: com.android.calculator2  //测试包名:IncludeCategory: android.intent.category.LAUNCHER //包的类别:IncludeCategory: android.intent.category.MONKEY// Selecting main activities from category android.intent.category.LAUNCHER   //选择主activities//   - NOT USING main activity com.android.vending.AssetBrowserActivity (from package com.android.vending)   //不被测试的包的activity //   - NOT USING main activity com.android.contacts.activities.PeopleActivity (from package com.android.contacts)//   - NOT USING main activity com.android.camera.CameraLauncher (from package com.android.camera2)//    - NOT USING main activity com.android.calendar.AllInOneActivity (from package com.android.calendar)// Seeded: 1476026024055  //随机种子// Event percentages:     //事件百分比，可调//   0: 15.0%//   1: 10.0%//   2: 2.0%//   3: 15.0%//   4: -0.0%//   5: 25.0%//   6: 15.0%//   7: 2.0%//   8: 2.0%//   9: 1.0%//   10: 13.0%:Switch:    //表示跳转到com.android.calculator2里面的Calculator这一个Activity里#Intent;action=android.intent.action.MAIN;category=android.intent.category.LAUNCHER;launchFlags=0x10200000;component=com.android.calculator2/.Calculator;end//允许此Intent跳转（ Intent在android中起着一个媒体中介的作用，它是一个对象，专门提供组件间互相调用的相关信息）    // Allowing start of Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] cmp=com.android.calculator2/.Calculator } in package com.android.calculator2Sleeping for 0 milliseconds  //事件间的延迟思考时间为0// 下列为发送的些操作，如点击按下，点击放开，触摸移动:Sending Key (ACTION_DOWN): 172    // KEYCODE_GUIDE:Sending Key (ACTION_UP): 172    // KEYCODE_GUIDESleeping for 0 milliseconds:Sending Touch (ACTION_DOWN): 0:) (804.0,229.0  //坐标系:Sending Touch (ACTION_UP): 0:(809.7128,228.16101)Sleeping for 0 milliseconds:Sending Trackball (ACTION_MOVE): 0:(4.0,4.0):Sending Trackball (ACTION_MOVE): 0:(-1.0,-3.0):Sending Trackball (ACTION_MOVE): 0:(-2.0,-1.0):Sending Trackball (ACTION_MOVE): 0:(-2.0,3.0):Sending Trackball (ACTION_MOVE): 0:(1.0,-2.0)Events injected: 10  //注入事件数为10:Sending rotation degree=0, persist=false  // 发送屏幕翻转度=0，存留=假:Dropped: keys=0 pointers=0 trackballs=0 flips=0 rotations=0  //被丢弃：键=0，指针=0，轨迹球=0，键盘轻弹=0，屏幕翻转=0，0表示全部成功##Network stats: elapsed time=58ms (0ms mobile, 0ms wifi, 58ms not connected) // 网络状态：占用时间=58ms（0ms用在手机上， 0ms用在无线网络中，没有连接是 58ms）// Monkey finished    //monkey测试完毕<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>异常情况</strong></p><p>monkey 测试出现错误后，一般的分析步骤<br>1.看monkey的日志 (注意第一个switch以及异常信息等)<br>2.程序无响应的问题: 在日志中搜索 “ANR  ”(Application No Response )</p><p>3.崩溃问题：在日志中搜索 “Exception” (如果出现空指针， NullPointerException) 肯定是有bug<br>4.Crash  , error</p><p><strong>logcat</strong></p><p>logcat是Android中一个命令行工具，可以用于得到程序的log信息。<br>adb logcat        输出全部日志<br>adb logcat -v time| findstr  appname  &gt;d:/para/xx.log只显示需要的应用日志输出到指定路径  -v time 显示时间                                     </p><p>adb logcat -f /sdcard/log.txt  &amp; 注意这个log文件是输出到手机上，需要指定合适的路径, &amp;符号表示后台执行</p><blockquote><p>Android日志系统提供了记录和查看系统调试信息的功能。日志都是从各种软件和一些系统的缓冲区中记录下来的，缓冲区可以通过 logcat 命令来查看和使用</p></blockquote><hr><p><strong>补充：</strong></p><p>一、monkey测试，怎么分析BUG？<br>将APP操作日志重定向到本地文件(monkey.log)，然后通过查看本地monkery日志，搜索关键词ANR、Exception、Crash、error，若找到关键词，则说明程序存在错误。<br>ANR：程序无响应<br>Exception：空指针异常，对象找不到C=A/B,A=null<br>Crash（崩溃，闪退）、error（错误）</p><p>二、一般monkey测试，事件总数设置多少？事件百分比怎么定义的？</p><p>一般monkey事件设置20000-100000次，一般没有规定这个具体百分比，我们可以根据实际情况来定一个百分比。<br>比如一部手机，那么我们根据用户习惯，最常用的就是点击、滑动、系统按键事件，这三个占用百分比多一些，其他事件设置百分比少一点。</p><p>三、monkey日志中一般出现什么问题？出现这些问题你一般怎么做的？</p><p>  系统崩溃、超时无响应、空指针问题</p><p>  1.在monkey操作日志，查询ANR、crash、exception、error<br>  2.若查找到相关信息，根据上下文信息分析bug是怎么出现的，截图给开发。<br>  3.通过locat获取系统缓冲区中的程序日志信息截图给开发。<br>  4.开发根据以上截图及日志信息找到问题并解决<br>  5.开发修复后，我们在使用相同的种子数及相关参数，做回归验证测试。</p><p>四、怎么测试你的APP的性能？（资源消耗CPU,内存，流量消耗等）<br> 场景一：对APP运行monkey测试，使其在繁忙的时候测试APP的内存，CPU，流量，电量的消耗<br>  1.在手机安装测试测试性能的软件（如：Emmagee）,打开Emmagee，选择要测试的软件，开始测试<br>  2.用monkey命令运行被测试软件<br>  3.在手机sdcard找到Emmagee的测试数据；<br>  4.最导出并查看：CPU，内存，流量，电量</p><p>场景二：使APP切换到后台运行，测试APP的内存，CPU，流量，电量<br>  1.在手机安装测试测试性能的软件（如：Emmagee）,打开Emmagee，选择要测试的软件，开始测试<br>  2.在手机sdcard找到Emmagee的测试数据；<br>  3.最导出并查看：CPU，内存，流量，电量</p><p>五、简述Android四大组件及其作用<br>一、活动（activity）：表现功能，界面呈现，相当于我们web网页一个页面，即一个APP页面对应一个activity。<br>二、服务（server）：后台运行服务<br>三、广播接收器：接收系统或其他APP信息，软件处理或响应<br>四、内容提供者（content provider）：支持不同软件间的数据交互</p><p>六、什么是FPS，你了解的FPS值一般为多少？<br>   帧率，一般fps值为60以上，值越高画质越流畅。</p><p>七、使用手机做monkey测试的步骤？</p><p>1.数据线连接手机跟电脑<br>2.手机启动开发者模式打开usb调试功能<br>3.打开cmd，查看adb设备是否上线<br>4.找到手机APP包名，打开APP<br>5.输入命令adb shell monkey -p APP包名 -s 100 –throttle 1000 –pct-touch 40 –pct-motion 30 –pct-syskeys 30 –ignore-crashes –ignore-timeouts –ignore-security -v -v -v 1000 &gt;F:\lianxi\monkey.log1<br>6.adb logcat APP包名 &gt;F:\lianxi\app.log<br>7.打开monkey.log查找关键字，若出现关键词，定位行数。<br>8.打开app.log结合monkey错误行数定位java错误行数<br>9.截图给开发</p>]]></content>
      
      
      
        <tags>
            
            <tag> monkey </tag>
            
            <tag> Android压测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitee+PicGo搭建免费图床</title>
      <link href="/post/eb1409af.html"/>
      <url>/post/eb1409af.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>前言：对于日常使用Markdown写笔记，插入图片是一个问题。为此，使用gitee+PicGo搭建个人图床是就可以轻松解决这个问题，简便又免费，存储和速度也可以满足要求。如果使用其他图床，不过大多数需要付费，还有各种限制，感觉不是很安全，所以自己搭建一个就很舒心。</p><hr><h5 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h5><p><strong>1.安装Node.js</strong></p><p>Node.js 是用于 PicGo 的各种插件下载处理的，要求版本 &gt;= 8。</p><p>官网下载：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a> </p><p>安装教程：<a href="https://blog.csdn.net/qq_40732336/article/details/120253542">https://blog.csdn.net/qq_40732336/article/details/120253542</a></p><p>安装后验证：<code>node  -v</code>   （cmd命令行输入进行验证是否安装成功，出现版本号就是安装成功）</p><p><strong>2.码云建仓</strong></p><p>第一步：注册账号：自行注册即可。</p><p>官网：<a href="https://gitee.com/">https://gitee.com/</a></p><p>第二步：新建仓库，专门存放图片</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a5.png"></p><p>输入仓库名称，设置模板选择 Readme 文件，选择分支模型选择单分支模型（只创建 master 分支），然后点击创建。如下图：注意：我是已经创建好的仓库</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a6.png"></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a7.png"></p><p>创建完毕后，点击管理选项，如下图：</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a8.png"></p><p>接着在基本信息中，将是否开源设置为开源，点击保存。</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a9.png"></p><p>点击个人头像，在个人主页选择私人令牌=&gt;生成令牌</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a10.png"></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a11.png"></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/7.png"></p><blockquote><p>注意：生成的令牌保存好</p></blockquote><p>第三步：安装PicGo</p><p>进入 PicGo 官网：<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a> ，直接下载安装</p><h5 id="二、PicGo配置"><a href="#二、PicGo配置" class="headerlink" title="二、PicGo配置"></a>二、PicGo配置</h5><p><strong>1.下载插件</strong></p><p>进入 PicGo，选择 <strong>插件设置</strong>，输入 <strong>gitee</strong>，选择安装第二个插件 **gitee-uploader 1.1.2 **，该插件用来设置 gitee 作为图床的。</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/8.png"></p><p>安装成功后，点击该插件右下角齿轮状图标，选择 <strong>uploader - gitee</strong></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/9.png"></p><p><strong>2.插件配置</strong></p><p>在该配置中只需要配置 repo 和 token 两项。</p><p>其中 repo 为 ： giteeUsername/repositoryName，比如你的 gitee 账号为 haiw1，存储图片的仓库为 picture，则此处填入 haiw1/picture</p><p>token 则是 gitee 上个人的私人令牌，直接填入（刚才保存的令牌直接粘贴进来）</p><p>然后点击 确定</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/10.png"></p><p>3.PicGo设置</p><p>进入 <strong>PicGo</strong>，选择 <strong>PicGo设置</strong> ，滑到最下面，选择 <strong>gitee</strong></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/11.png"></p><p>4.最后，回到 <strong>上传区</strong>，看到最上面的图片上传处选择框为 gitee 即可，如果不是就自己选一下，然后就可以正常上传图片到 gitee 并获得外链了。</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/12.png"></p><p>参考文章：</p><p><a href="https://blog.csdn.net/Y2ANGAO/article/details/124201503">https://blog.csdn.net/Y2ANGAO/article/details/124201503</a></p><p><a href="https://www.jianshu.com/p/ddb90da46eb2">https://www.jianshu.com/p/ddb90da46eb2</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> PicGo </tag>
            
            <tag> gitee </tag>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fiddler工具使用</title>
      <link href="/post/2d5174f5.html"/>
      <url>/post/2d5174f5.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="一、Fiddler简介"><a href="#一、Fiddler简介" class="headerlink" title="一、Fiddler简介"></a>一、Fiddler简介</h4><p>Fiddler是位于客户端和服务器端的HTTP代理（过滤的意思），也是目前最常用的http抓包工具之一 。 它能够记录客户端和服务器之间的所有 HTTP请求，可以针对特定的HTTP请求，分析请求数据、设置断点、调试web应用、修改请求的数据，甚至可以修改服务器返回的数据，功能非常强大，是web调试的利器。</p><p>既然是代理，也就是说：客户端的所有请求都要先经过Fiddler，然后转发到相应的服务器，反之，服务器端的所有响应，也都会先经过Fiddler然后发送到客户端，基于这个原因，Fiddler支持所有可以设置http代理为127.0.0.1:8888的浏览器和应用程序。</p><p>Fiddler是一个http协议调试代理工具，它能够记录并检查所有你的电脑和互联网之间的http通讯，设置断点，查看所有的“进出”Fiddler的数据。 Fiddler 要比其他的网络调试器要更加简单，因为它不仅仅暴露http通讯还提供了一个用户友好的格式。</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a12.png"></p><h4 id="二、Fiddler安装"><a href="#二、Fiddler安装" class="headerlink" title="二、Fiddler安装"></a>二、Fiddler安装</h4><p>pc端安装fiddler</p><p>下载地址：Fiddler.exe，<a href="http://www.telerik.com/download/fiddler">http://www.telerik.com/download/fiddler</a></p><p>安装时候，遇到下载一个证书提示，点yes安装。</p><h4 id="三、抓取手机安卓APP数据包"><a href="#三、抓取手机安卓APP数据包" class="headerlink" title="三、抓取手机安卓APP数据包"></a>三、抓取手机安卓APP数据包</h4><p>1.配置fiddler允许监听https</p><p>打开Fiddler菜单项Tools-&gt;Fiddler Options，如下图：</p><p>(默认decypt https sraffic是不勾选的，也就是默认不会捕获https会话)</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/wps1.jpg"></p><p>选中decrypt https traffic和ignore server certificate errors两项</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/wps2.png"></p><p>第一次会提示是否信任fiddler证书及安全提醒，选择yes，之后也可以在系统的证书管理中进行管理。</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/wps3.jpg"></p><p>2.配置fiddler允许远程连接</p><p>如上图的菜单中点击connections，选中allow remote computers to connect，默认监听端口为8888，若被占用也可以设置，配置好后需要重启Fiddler，如下图：</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a13.png"></p><p>3.这些配置完成之后，一定要重新启动fiddler</p><p>可以看到fiddler的默认端口是8888，我们可以现在浏览器上输入”<a href="http://127.0.0.1:8888”">http://127.0.0.1:8888”</a></p><p> <img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a14.png"></p><p>到这里为止我们的fiddler就配置完成了，接下来需要配置手机上的无线网络。</p><p>4.手机无线网络配置</p><p>注意：如果需要fiddler抓取Android app上的数据包，那么两者必须在同一个无线网络中。(同时，必要时请关闭电脑的防火墙)</p><p>在手机的无线网络配置之前，必须要首先知道fiddler所在主机的ip地址：</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a31.png"></p><p>可以看到我的fiddler所在主机，也就是我的电脑在无线网中的ip地址是192.168.1.109</p><p>打开手机设置中的无线网络界面，进行如下四步操作：</p><p>选中连接的网络，点击修改网络</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/wps6.jpg"></p><p>点击高级选项</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/wps7.jpg"></p><p>代理—&gt;手动</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/wps8.jpg"></p><p>输入代理服务器的ip，也就是我们fiddler所在主机的ip地址，和端口，fiddler默认的端口是8888，IP选项设置为”DHCP”</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/wps9.jpg"></p><p>点击保存，此时手机端就配置成功了，打开fiddler，使用打开网易新闻客户端。</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/wps10.jpg"></p><p>此时可以看到fiddler抓取的网易app发送和接收的相关数据包。</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/wps11.jpg"></p><p>ok，左侧是我们的所有会话，我随机的选中一个会话，该会话是image类型的，查看该会话的内容，是我们网易新闻的头条上的图片。</p><p><strong>注意：</strong></p><p>1.关闭电脑的防火墙 //根据连接情况，fiddler能代理成功不需要关闭。</p><p>2.如果需要抓取手机app的数据包，需要手机和电脑在都连接同一个无线网络</p><p>3.抓完包以后将fiddler关闭(提高访问网络的速度)同时将手机上的代理关闭 (如果不关闭代理，当fiddler关闭，或者是两者连接的不是同一无线网络，手机会不能正常的访问网络)</p><h4 id="四、抓包分析"><a href="#四、抓包分析" class="headerlink" title="四、抓包分析"></a>四、抓包分析</h4><p>会话面板说明：</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a32.png"></p><p>会话列表说明：</p><p><strong>·</strong> <strong>#</strong> - 为了使用方便，Fiddler 为你生成的会话列表的ID</p><p><strong>·</strong> <strong>Result</strong> - HTTP响应的状态码 <a href="http://www.fiddler2.com/Fiddler/help/headers.asp">Learn more…</a></p><p><strong>·</strong> <strong>Protocol</strong> - 本次会话使用的协议类型(HTTP/HTTPS/FTP)</p><p><strong>·</strong> <strong>Host</strong> - 发送本次请求的主机名</p><p><strong>·</strong> <strong>URL</strong> - 本次请求的路径和具体文件名</p><p><strong>·</strong> <strong>Body</strong> - 响应返回内容的大小</p><p><strong>·</strong> <strong>Caching</strong> -<strong>是否使用了缓存</strong></p><p><strong>·</strong> <strong>Process</strong> - 发送本次请求的程序进程的名字</p><p><strong>·</strong> <strong>Content-Type</strong> - 响应的响应头的 Content-Type 值</p><p><strong>·</strong> <strong>Custom</strong> - 通过脚本设置的文本域. <a href="http://www.fiddler2.com/Fiddler/Dev/ScriptSamples.asp">Learn more…</a></p><p><strong>·</strong> **Comments **- 通过脚本或者在会话列表中右键添加的注释。</p><p>#号列中的图标，每种图标代表不同的相应类型，具体的类型包括：</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a33.png"></p><p><strong>1.Statistic(统计)</strong></p><p>关于HTTP请求的性能和其他数据分析：</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%875.png"></p><p>备注：Determine Gateway（网关确认）：路由器和普通机器并没有实际上的差别！只不过他可以配置转发某一些报文。把与它连接的一个网络报文发给与它连接的另一个网络，而一般的机器并不会传发任何报文！ 网关也是一个机器，但是它可以转换不同的协议，例如与它相联的一个为tcp/ip网，而加一个为ipx网，这两个网络就要靠网关才能通信，通常网关和路器为一个</p><p>session会话的分析</p><p>这里我随便选择一个会话来进行简单的分析。</p><p>  <img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a34.png"></p><p><strong>2.Inspectors(请求查看器)</strong></p><p>分为上下两个部分，上半部分是请求头部分，下半部分是响应头部分。对于每一部分，提供了多种不同格式查看每个请求和响应的内容。JPG 格式使用 ImageView 就可以看到图片，HTML/<a href="http://lib.csdn.net/base/javascript"><em><strong>*js*</strong></em></a>/CSS 使用 TextView 可以看到响应的内容。Raw标签可以查看原始的符合HTTP标准的请求和响应头。Auth则可以查看授权Proxy-Authorization 和 Authorization的相关信息。Cookies标签可以看到请求的cookie和响应的set-cookie头信息。</p><p>  <img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%876.png"></p><p><strong>3.Autoresponder(文件代理响应)</strong></p><p>Fiddler比较重要且比较强大的功能之一。可用于拦截某一请求，并重定向到本地的资源，或者使用Fiddler的内置响应。可用于调试服务器端代码而无需修改服务器端的代码和配置，因为拦截和重定向后，实际上访问的是本地的文件或者得到的是Fiddler的内置响应。当勾选allow autoresponser 并设置相应的规则后（本例中的规则是将<a href="http://blog.csdn.net/ohmygirl%E7%9A%84%E8%AF%B7%E6%B1%82%E6%8B%A6%E6%88%AA%E5%88%B0%E6%9C%AC%E5%9C%B0%E7%9A%84%E6%96%87%E4%BB%B6layout.html%EF%BC%89,%E5%A6%82%E4%B8%8B%E5%9B%BE%E6%89%80%E7%A4%BA">http://blog.csdn.net/ohmygirl的请求拦截到本地的文件layout.html）,如下图所示</a></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%877.png"></p><p>然后在浏览器中访问<a href="http://blog.csdn.net/ohmygirl%EF%BC%8C%E5%BE%97%E5%88%B0%E7%9A%84%E7%BB%93%E6%9E%9C%E5%AE%9E%E9%99%85%E4%B8%BA%EF%BC%9A">http://blog.csdn.net/ohmygirl，得到的结果实际为：</a></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%878.png"></p><p>这刚好是本地layout.html的内容，说明请求已经成功被拦截到本地.当然也可以使用Fiddler的内置响应。下图是Fiddler支持的拦截重定向的方式：</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%879.png"></p><p>因此，如果要调试服务器的某个脚本文件，可以将该脚本拦截到本地，在本地修改完脚本之后，再修改服务器端的内容，这可以保证，尽量在真实的环境下去调试，从而最大限度的减少bug发生的可能性。</p><p><strong>4.Composer(伪造请求)</strong></p><p>有两种常用的方式构建请求:</p><p>(1)Parsed 输入请求的url之后executed即可，也可以修改相应的头信息（如添加常用的accept, host, referrer, cookie，cache-control等头部）后execute.</p><p>这个功能的常见应用是：“刷票”（不是火车票！！），如刷新页面的访问量（基于道德和安全原因，如果你真去刷票，刷访问量，本博客概不负责）</p><p>(2)Raw 使用HTTP头部信息构建http请求。与上类似。不多叙述</p><p><strong>5.Filter(过滤展示)</strong></p><p>Fiddler另一个比较强大的功能。Fiddler提供了多维度的过滤规则，足以满足日常开发调试的需求。如下图示：</p><p>过滤规则有：</p><p>a. 过滤只显示特定域名的HTTP请求</p><p> 找到hosts &gt;show only the following hosts</p><p>输入对应的IP地址或是域名，多个以分号；隔开。</p><p>b. 过滤显示特定格式的HTTP请求</p><p>找到 request header输入正则表达式</p><p>REGEX:(?insx)/[^?/]<em>.(css|ico|jpg|png|gif|bmp|wav)(?.</em>)?$</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8710.png"></p><h4 id="五、限速测试"><a href="#五、限速测试" class="headerlink" title="五、限速测试"></a>五、限速测试</h4><p>1：安装fiddler抓包工具</p><p>2：设置手机无线代理</p><p>3：进行限速设置（回答时候就说这个，如果详细问，就回答下面的2种方法）</p><ol><li>在Fiddler的性能菜单里面设置模拟Mondem速度（极端网速，最慢的）</li></ol><p>（最大56Kbps，早期的拨号上网工具，勾选该选项后，所有通过Fiddler代理的流量都会变得和多年前的56k小猫时上网一般的慢。）</p><p><strong>Rules——performance—–simulate  modem speeds</strong></p><ol><li>通过限速函数来限制速度（可调整速度快慢）</li></ol><p>( 提供了一个配置文件CustomRules.js来调整这些参数，点击通过限制时间来达到限速目的,计算公式为算法就是**1000/下载速度Kbps = 需要delay的时间(毫秒)<em>*，比如下载速度为100Kbps，那么就需要10毫秒，计算公式也可以是：(1KB/下载速度)*1000 = 需要delay的时间(毫秒)）**下载速度=1000/延迟时间</em>*</p><p> <img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8711.png"></p><p>oSession[“request-trickle-delay”] = “20”;<br>oSession[“response-trickle-delay”] = “20”;</p><p>4：运行被测app软件</p><p>5：在fiddler里面查看发送的请求和服务器返回的数据</p><p>附加知识：</p><p><strong>我们为什么要限速？</strong></p><p>限速对于web前端研发是非常重要的，由于开发者的机器一般配置都很高，并且是在localhost下来调试程序，所以很难模拟到用户的真实使用情况，如正在下载JS,css等静态资源的时候，页面的一个渲染情况。当网速很慢的时候，我们更希望看到的是先渲染出用户界面，而不是让用户看到一片空白。</p><h4 id="六、断点调试及解码"><a href="#六、断点调试及解码" class="headerlink" title="六、断点调试及解码"></a>六、断点调试及解码</h4><p><strong>断点调试：</strong></p><p>1.打开一个要设置断点的网页(例如登录页面)</p><p><a href="http://127.0.0.1:8081/login.html">http://127.0.0.1:8081/login.html</a></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8712.png"></p><p>2.打开刚才打开的登录页面，并输入错误的用户名，密码，此时fiddler会记录到输入</p><p> 输入的用户名和密码</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8713.png"></p><p>3.1点rules - automatic breakpoints，选择下级菜单before request（请求断点，修改请求数据）</p><p>（该断点意思是点击按钮后，提交消息会提交给fiddler，但是fiddler把此消息截留了，没发送给服务器）</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8714.png"></p><p>错误的密码如下：</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8715.png"></p><p>再在截取的用户名密码处输入正确的用户名，密码</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8716.png"></p><p>点击“Run to Completion”，登录成功（这一步测试通过了，用断点方式验证网页代码是否ok）</p><p>会话ID图标由 <img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/wps14.png">变成<img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/wps15.png"> 成功状态（箭头表示post方式）</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8717.png"></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8718.png"></p><p>3.2点rules - automatic breakpoints，选择下级菜单After Responses(通过断点修改响应后的数据)</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8719.png"></p><p>以百度主页为例，我们拦截到响应数据中的title值为”百度一下，你就知道“，我们将响应数据中的title</p><p>改成”test百度一下，你就知道“，然后在前端看看最终展示的是什么数据。</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8720.png"></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8721.png"></p><p><strong>请求和响应数据解码：</strong></p><p>1.响应body解码</p><p>有时候我们在Fiddler上看到响应数据是几个乱码字符，首先我们可以点击，上方黄色提示区域直接进行解码。如下面的两个图所示</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8722.png"></p><p> 解码后显示如下：</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8723.png"></p><p>2.请求和响应数据解码</p><p>有的时候，基于安全性考虑，开发人员会将请求和响应的body根据一定规则进行解码。如果是普通的编码规则，我们可以直接通过Fiddler操作进行解码。例如在登录百度网站的时候，有个参数的值是一个url地址，这个url经过urlEncode进行转码了。我们就可以将该参数通过urlDecode进行解码。</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8724.png"></p><p>首先，找到这个参数，选中后右键选择【send to TextWizard】</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8725.png"></p><p>然后，在【transform】中找到【URLDecode】，字段值就被成功解码，我们就可以很清楚的看到里面有哪些参数以及参数的值是什么了。</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8726.png"></p><h4 id="七、Fiddler做接口测试"><a href="#七、Fiddler做接口测试" class="headerlink" title="七、Fiddler做接口测试"></a>七、Fiddler做接口测试</h4><p>1：Fiddler录制脚本，找一个接口，切换到Raw检查入参及消息头信息</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8727.png"></p><p>2:切换到Composer，设置请求方式，复制接口请求地址，复制消息头信息，在request body复制请求参数及相应的参数值，点击Execute</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%8728.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> fiddler </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux搭建mysql</title>
      <link href="/post/9e9ece7f.html"/>
      <url>/post/9e9ece7f.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>一、检查Linux操作系统上是否安装MySQL数据库</p><pre class="line-numbers language-none"><code class="language-none">rpm -qa | grep mysql //查看操作系统是否已经安装了mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>二、卸载掉原有mysql服务</p><pre class="line-numbers language-none"><code class="language-none">rpm -e mysql //普通删除模式<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">rpm -e --nodeps mysql //强力删除模式<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>卸载命令示例：</p><pre class="line-numbers language-none"><code class="language-none">[root@localhost /]# rpm -e mysql -5.1.73-8.el6_8.i686<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>三、查看yum服务器上面是否有mysql安装包，然后执行命令安装mysql服务</p><p>1.在线安装mysql命令:</p><pre class="line-numbers language-none"><code class="language-none">yum install -y mysql mysql-server mysql-devel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.设置mysql的root账号及密码</p><pre class="line-numbers language-none"><code class="language-none">mysqladmin -u root password  'root'  //给root账号设置密码为root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个root账号时mysql的root账号，非linux的root账号</p><p>3.启动mysql服务</p><pre class="line-numbers language-none"><code class="language-none">service mysqld start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.登录mysql数据库服务</p><pre class="line-numbers language-none"><code class="language-none">mysql -u root -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>四、mysql数据库的主要配置文件</p><pre class="line-numbers language-none"><code class="language-none">1./etc/my.cnf //这是mysql的主要配置文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">2./var/lib/mysql //mysql数据库的数据库文件存放位置<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">3./var/log //mysql数据库的日志输出存放位置<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中mysql.log这个文件是存放我们跟mysql数据库进行操作而产生的的一些日志信息，通过查看该日志文件，可以从中获得很多信息。</p><p>mysql数据库是可以通过网络访问的，其中使用的协议是tcp/ip协议，绑定端口3306，可以通过<code>netstat  -anp</code>命令查看linux系统是否在监听3306这个端口。</p><p>五、通过mysql命令行语句来导入、导出数据库文件</p><blockquote><p>此部分内容待补充：</p></blockquote><p>六、本地登录常见错误解决方法</p><p><strong>本地登录1145错误解决办法：</strong></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%874.png"></p><p><strong>1045错误命令行操作如下：</strong></p><p>1.停止mysql服务: #service mysqld stop</p><p>2.执行命令:#mysqld_safe –user=mysql –skip-grant-tables –skip-networking &amp;</p><p>3.登录数据库:#mysql -u root mysql</p><p>4.修改mysql数据库root用户名的密码为123456</p><pre class="line-numbers language-none"><code class="language-none">mysql&gt; UPDATE user SET Password=PASSWORD(‘123456’) where USER=’root’;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5.刷新数据库</p><pre class="line-numbers language-none"><code class="language-none">mysql&gt; FLUSH PRIVILEGES;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6.退出数据库</p><pre class="line-numbers language-none"><code class="language-none">mysql&gt; quit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>7.重启数据库</p><pre class="line-numbers language-none"><code class="language-none">#service mysqld restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>8.重新以新密码登录</p><pre class="line-numbers language-none"><code class="language-none">#mysql -u root -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>远程连接1130错误解决方案</strong></p><p>当连接mysql数据库的时候，出现ERROR 1130 (HY000): Host ‘xxxx’ is not allowed to connect to this MySQL server的问题。解决该问题使用以下方法</p><p><strong>授权法</strong></p><p>例如，你想root用户使用123456密码从任何主机连接到mysql服务器的话。</p><p>GRANT ALL PRIVILEGES ON <em>.</em> TO ‘root‘@’%’ IDENTIFIED BY ‘123456’ WITH GRANT OPTION;</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql语法笔记</title>
      <link href="/post/521e7fcf.html"/>
      <url>/post/521e7fcf.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1:创建数据库"></a>1:创建数据库</h4><p>create database mydb1;</p><p>create database mydb2 character set utf8;</p><h4 id="2-查看所有数据库"><a href="#2-查看所有数据库" class="headerlink" title="2:查看所有数据库"></a>2:查看所有数据库</h4><p>show databases; </p><h4 id="3-创建数据表"><a href="#3-创建数据表" class="headerlink" title="3:创建数据表"></a>3:创建数据表</h4><p>create table user(</p><p>Id     int,</p><p>name    varchar(20),</p><p>password  char(20),</p><p>birthday    date,</p><p>salary    float,</p><p>resume text(200) ); </p><h4 id="4-查看所有数据表"><a href="#4-查看所有数据表" class="headerlink" title="4:查看所有数据表"></a>4:查看所有数据表</h4><p>show tables;</p><h4 id="5-显示表的结构"><a href="#5-显示表的结构" class="headerlink" title="5:显示表的结构"></a>5:显示表的结构</h4><p><strong>desc</strong> <em><strong>table_name</strong></em></p><h4 id="6-删除表语句"><a href="#6-删除表语句" class="headerlink" title="6:删除表语句"></a>6:删除表语句</h4><p><strong>drop  table table_name</strong></p><h4 id="7-启动数据库服务"><a href="#7-启动数据库服务" class="headerlink" title="7:启动数据库服务"></a>7:启动数据库服务</h4><p><strong>service  mysqld  start</strong></p><h4 id="8-登录MySQL"><a href="#8-登录MySQL" class="headerlink" title="8:登录MySQL"></a>8:登录MySQL</h4><p> <strong>mysql –u  root -p</strong></p><h4 id="9-备份与恢复"><a href="#9-备份与恢复" class="headerlink" title="9:备份与恢复"></a>9:备份与恢复</h4><p><u>备份数据：</u></p><p><strong>mysqldump  –u  用户名  –p  数据库名&gt;文件名.sql</strong></p><p>mysqldump  –u root  -p  db_hr&gt;db_hr.sql</p><p><u>恢复数据：</u></p><p><strong>mysql  –u 用户名 –p 数据库名&lt;文件名.sql</strong></p><p>mysql – u root  -p db_hr1  &lt;db_hr.sql</p><p>或<strong>Source  /TEST/文件名.sql</strong></p><p>source  /test/db_hr.sql</p><h4 id="10-Insert插入语句"><a href="#10-Insert插入语句" class="headerlink" title="10:Insert插入语句"></a>10:Insert插入语句</h4><p>Insert  into account (id,name,password) value (1,’tom’,’123456’);</p><p>insert into account (id,name,password) values (1,’tom’,’123456’),(2,’jeck’,’654321’); </p><h4 id="11-Update修改语句"><a href="#11-Update修改语句" class="headerlink" title="11:Update修改语句"></a>11:Update修改语句</h4><p>格式：Update   tableA    set  columnA=新值A，columnB=新值B  where 条件</p><p>例子：Update  account  set  name=’mike’ where id =2；(只更新id=2对应的信息的name值为mike ）</p><p>Update employee set salary=salary+500;（更新所有工资都加500）</p><h4 id="12-Delete删除语句"><a href="#12-Delete删除语句" class="headerlink" title="12:Delete删除语句"></a>12:Delete删除语句</h4><p>格式1：Delete from 表名；删除表中所有数据</p><p>例子1：Delete from test; </p><p>格式2：Delete from 表名 where 字段条件</p><p>例子2：Delete from test  where id =1;</p><p>例子2：Delete from test  where name=‘tester’; </p><h4 id="13-select查询语句"><a href="#13-select查询语句" class="headerlink" title="13:select查询语句"></a>13:select查询语句</h4><p>Select * from  tableA;查询tableA表中所有字段对应的数据</p><p>Select name,math from  student;查询student表中name,math2个字段对应的数据</p><p>查询英语分数在85－95之间的同学相关信息。</p><p>select * from student where english&gt;=85 and english&lt;=95;</p><p>select * from student where english between 85 and 95;</p><p>查询数学分数为84,90,91的同学。</p><p>select * from student where math in(84,90,91);</p><p>查询所有姓何的学生成绩。</p><p>select * from student where name like ‘何%’;</p><p>查询数学分&gt;85，语文分&gt;90的同学。</p><p>select * from student where math&gt;85 and chinese&gt;90;</p><h4 id="14-合计函数"><a href="#14-合计函数" class="headerlink" title="14:合计函数"></a>14:合计函数</h4><p><strong>函数－count（Count(列名)返回行的总数）</strong></p><p>统计总分大于260的人数有多少</p><p>select  count(*) from student where math+chinese+english&gt;260;</p><p><strong>函数－SUM（求和）</strong></p><p>统计一个班级总成绩？</p><p>select sum(math+chinese+english)from student;</p><p>统计一个班级语文、英语、数学各科的总成绩</p><p>select sum(math),sum(chinese),sum(english) from student;</p><p><strong>函数－AVG（求平均值）</strong></p><p>求一个班级总分平均分</p><p>select avg (math+chinese+english) from student; </p><p><strong>函数－MAX/MIN（列的最大/最小值）</strong></p><p>求数学最高分</p><p>Select max（math）from student；</p><p>求数学最低分</p><p>Select min（math）from student；</p><p><strong>Group by 分组函数</strong></p><p>按班分组查出总分，最高分</p><p>select class_id,sum(math+chinese+english),max(math+chinese+english) from student group by class_id;</p><p>查询出student中学员姓名，班级以及班级数学最高分;</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%871.png"></p><p>select name,class,math FROM (SELECT * FROM student ORDER BY math DESC) AS a GROUP BY class;</p><p>备注：因为查询分组group by 的特性是分组 并取各组第一条查询到的数据信息</p><p>（a和b是第一组，如果a排前面，那么就分组就拿a的那条信息，如果是b则拿b的信息），</p><p>我们单纯进行分组能查到各分组的最高分，但是不一定能相应查询到对应的最高分的姓名、班级等信息。</p><p>所以，先将全部数据进行降序排列，然后班级分组（group by class）确保mysql查询中各班的最高分那条记录是首先查到的（这点很重要）！</p><p>原则1：聚合函数可以跟分组字段一起出现在select语句后面;</p><p>举例: SELECT class,MAX(math) FROM student GROUP BY class ;</p><p>原则2：使用分组函数group by,则select语句后面的字段只能是聚合函数+分组字段;</p><p>举例: SELECT class,name, MAX(math) FROM student GROUP BY class ,name;</p><p>原则3：group by 分组后的数据过滤，只能使用having;</p><p>举例: SELECT grade,MAX(age) FROM student GROUP BY grade HAVING MAX(age)&gt;60;</p><p><strong>where和having的区别：</strong></p><p>where 子句的作用是对查询结果进行分组前，将不符合where条件的行去掉，即在分组之前过滤数据，where条件中不能包含聚合函数，使用where条件过滤出特定的行。</p><p>having 子句的作用是筛选<strong>满足条件的组</strong>，即在分组之后过滤数据，条件中经常包含聚组函数，使用having 条件过滤出特定的组，也可以使用多个分组标准进行分组。</p><p><strong>order by 排序函数 –Asc升序、Desc降序</strong></p><p>按数学成绩从低到高排序</p><p>Select * from student order by math asc;</p><p>按数学成绩从高到低排序</p><p>Select * from student order by math desc;</p><p><strong>Distinct剔除重复数据</strong></p><p>select DISTINCT english from student;</p><p>Select DISTINCT english,math from student;</p><p>（distinct对其后面的全部列都有效，也就是只有全部列都重复才会去除<br>其中只要有一列不重复都不会去除）</p><h4 id="15-多表联合查询（内连接和外连接）"><a href="#15-多表联合查询（内连接和外连接）" class="headerlink" title="15:多表联合查询（内连接和外连接）"></a>15:多表联合查询（内连接和外连接）</h4><p><strong>内连接：inner join</strong></p><p>把两个表中对应的数据查出来（即把2个表中的交集部分查询出来，或是说把2个表中有相对应部分的数据查询出来）</p><p>语法一：select * from biao1 inner join biao2 on biao1.aa=biao2.bb;</p><p>语法二：select * from biao1 , biao2 where biao1.aa=biao2.bb;</p><p>备注：aa,bb字段分别为biao1与biao2中存储的相同字段内容,即aa,bb字段存储的内容相同，代表同一属性值</p><p><strong>三张表或是更多表的连接语句</strong></p><p>select * from biao1 inner join biao2 on biao1.aa=biao2.bb inner join biao3 on biao2.cc=biao3.dd;</p><p>select * from biao1,biao2,biao3 where biao1.aa=biao2.bb and biao2.cc=biao3.dd;</p><p><strong>外连接：left join/right join</strong></p><p>以某个表为基础把另外表中对应数据查出来。</p><p>比如说：</p><p>左外连接（left join）：即是以左边表为基础，同时把右边的表中和左边表中有相对应的部分数据一起展示出来；select * from biao1 left join biao2 on biao1.aa=biao2.bb;</p><p>右外连接（right join）：即是以右边表为基础，同时把左边的表中和右边表中有相对应的部分的数据一起展示出来；select * from biao1 right join biao2 on biao1.aa=biao2.bb;</p><h4 id="16-子查询"><a href="#16-子查询" class="headerlink" title="16:子查询"></a>16:子查询</h4><p>子查询是将一个查询语句嵌套在另一个查询语句中,把一个查询语句的查询结果，作为外层查询语句的条件。</p><p>select * from score where score.CN in (select ID from SC where KC=‘软件测试’);</p><p>查询出在课程表中有选过‘软件测试’课程的学员的考试成绩信息。</p><p>思路：先从课程表SC中查询出选修过‘软件测试’课程的学员编号信息，然后当做学员成绩表score中的子条件进行查询。</p><p>备注：SC为课程表（ID：为学员编号，KC：选课课程）；score为学员成绩表(CN：学员编号)。</p><p><strong>———————————————————————————————————————————————————</strong></p><p><strong>更新和查询同时使用原则：</strong></p><p>不能在同一语句中更新select出的同一张表元组的属性值</p><p>解决方法：将select出的结果通过中间表再select一遍即可。</p><p>即对同一张表查的同时更新会引起数据不一致，但是将查询结果事先放到临时表中就不会有这个问题了。</p><p>通俗点说：对同一个表数据进行查询的时候，又对这个表数据进行更新操作会有问题</p><p>例如：删除stu_2表中数学成绩相同的学员相关信息</p><p>DELETE  FROM stu_2  WHERE  math IN (SELECT math FROM (SELECT  math ,COUNT(math) FROM stu_2 GROUP BY math HAVING COUNT(math)&gt;1) AS stu_3) </p><p>思路：首先得查出stu_2表中有哪些人的数学成绩是重复的，先按照数学成绩进行分组，count（math）&gt;1求出每个组中有多少个分数相同的组员，大于1表示数学成绩重复。</p><p>然后使用子查询，查出出数学成绩在分组中重复组中的数学成绩信息。然后按照条件过滤进行删除。</p><p>备注：对同一个表进行数据查询又进行数据删除，语法上执行不通过，需要把查询的数据临时生存一个新表，这样就有效回避了对同一表进行查询和更新操作引起的数据不同步</p><h4 id="17-快速删除表数据方法"><a href="#17-快速删除表数据方法" class="headerlink" title="17:快速删除表数据方法"></a>17:快速删除表数据方法</h4><p>Delete from table (删除表数据可以回滚)</p><p>Truncate  table  tablename (最高效，删除表数据不能回滚)</p><h4 id="18-MySQL查询版本号的方式"><a href="#18-MySQL查询版本号的方式" class="headerlink" title="18:MySQL查询版本号的方式"></a>18:MySQL查询版本号的方式</h4><p>Select version();</p><p>Mysql  -V</p><h4 id="19-mysql-退出方式"><a href="#19-mysql-退出方式" class="headerlink" title="19:mysql 退出方式"></a>19:mysql 退出方式</h4><p>\q , exit, quit</p><h5 id="一：数据库编码类型与设置编码的方式"><a href="#一：数据库编码类型与设置编码的方式" class="headerlink" title="一：数据库编码类型与设置编码的方式"></a><strong>一：数据库编码类型与设置编码的方式</strong></h5><p>设置编码的几种方式：设置数据表编码类型、设置数据库编码类型、设置数据库全局编码类型。查看系统可用的编码类型：SHOW VARIABLES LIKE ‘%char%’;</p><p>展示结果可以可看到character_set_database 与 character_set_server 不同，且分别为utf8 与latin1，这是出现乱码的原因。</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%872.png"><br>解决方法：</p><p>1:修改/etc/my.cnf文件文件，添加如下内容：</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/%E5%9B%BE%E7%89%873.png"></p><p>[mysql]<br>default-character-set=utf8<br>[mysqld]<br>character_set_server =utf8<br>[client]<br>default-character-set =utf8</p><p>2:重新加载配置文件：source /etc/my.cnf</p><p>3:重启MySQL服务：service mysqld restart</p><p><strong>二：修改客户端表的编码格式：sqlyog, navicat等</strong></p><p>alter table tablename convert to character set utf8</p><p><em><strong>后续补充：</strong></em></p><h4 id="20-主外键"><a href="#20-主外键" class="headerlink" title="20:主外键"></a>20:主外键</h4><h4 id="21-触发器"><a href="#21-触发器" class="headerlink" title="21:触发器"></a>21:触发器</h4><h4 id="22-存储过程"><a href="#22-存储过程" class="headerlink" title="22:存储过程"></a>22:存储过程</h4><h4 id="23-索引"><a href="#23-索引" class="headerlink" title="23:索引"></a>23:索引</h4><h4 id="24-视图"><a href="#24-视图" class="headerlink" title="24:视图"></a>24:视图</h4><h4 id="25-约束"><a href="#25-约束" class="headerlink" title="25:约束"></a>25:约束</h4>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux基本命令</title>
      <link href="/post/65cd929b.html"/>
      <url>/post/65cd929b.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="一、linux目录结构："><a href="#一、linux目录结构：" class="headerlink" title="一、linux目录结构："></a>一、linux目录结构：</h4><pre class="line-numbers language-none"><code class="language-none">/      根目录/bin   存放二进制可执行文件(ls,cat,mkdir等)/boot  存放用于系统引导时使用的各种文件/dev   用于存放设备文件/etc   存放系统配置文件/home  存放所有用户文件的根目录，比如用户user1的主目录就是/home/user1/lib   标准程序设计库，又叫动态链接共享库，作用类似windows里的.dll文件/mnt   系统提供这个目录是让用户临时挂载其他的文件系统。/opt   额外安装的可选应用程序包所放置的位置/proc  虚拟的目录，系统内存的映射。可直接访问这个目录来获取系统信息/ root 超级用户主目录/sbin  存放二进制可执行文件，只有root才能访问/tmp   用于存放各种临时文件/var   用于存放运行时需要改变数据的文件，某些大文件的溢出区，比方说各种服务的日志文件/usr   用于存放系统应用程序，比较重要的目录/usr/local 本地管理员软件安装目录，也是最庞大的目录，要用到的应用程序和文件几乎都在这个目录。其中包含：/usr/X11R6         存放X window的目录/usr/bin           众多的应用程序/usr/sbin          超级用户的一些管理程序/usr/doc           linux文档/usr/include       linux下开发和编译应用程序所需要的头文件/usr/lib           常用的动态链接库和软件包的配置文件/usr/man           帮助文档/usr/src           源代码，linux内核的源代码就放在/usr/src/linux里/usr/local/bin     本地增加的命令/usr/local/lib     本地增加的库<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>命令行工具：</p><pre class="line-numbers language-none"><code class="language-none">在linux系统中，除了视窗操作外，还需要用到命令行工具，在其间输入命令，来完成任务，常见命令行工具如下：管理员root用户命名符号为：#普通用户符号为：$Linux命令区分大小写，对大小写敏感<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="二、文件和目录命令1："><a href="#二、文件和目录命令1：" class="headerlink" title="二、文件和目录命令1："></a>二、文件和目录命令1：</h4><pre class="line-numbers language-none"><code class="language-none">cd         去什么地方cd  /home  进入 '/ home' 目录' cd ..      返回上一级目录 cd   /home 进入个人的主目录 cd  /user1 回到个人的主目录 cd -  返回上次所在的目录 pwd   显示当前工作路径 ls    查看目录中的文件 ls -l 显示文件和目录的详细资料 （可简写为ll），后可跟具体文件名ls -a 显示隐藏文件 touch 生成一个空文件mkdir dir1      创建一个叫做 'dir1' 的目录' mkdir dir1 dir2 同时创建两个目录 mkdir /dir1/目录名        到指定目录创建文件夹mkdir  -p   /dir1/dir2   递归创建目录，即使上级目录不存在，会按目录层级自动创建目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>文件和目录命令2：</strong></p><pre class="line-numbers language-none"><code class="language-none">删除文件/删除目录：rm -f file1 删除一个叫做 ‘file1’ 的文件 , -f 直接删除文件不询问 rmdir dir1  删除一个叫做 ‘dir1’ 的空目录，不能删除非空目录rm -rf dir1 删除文件,而且可以删除非空目录。-rf参数表示递归强制删除rm -rf dir1 dir2 同时删除两个目录及它们的内容 移动/重命名文件/目录：mv dir1 new_dir          重命名/移动 一个目录 (文件)mv test1.txt test2.txt   将test1.txt 改名为test2.txt（当前目录无test2.txt文件，重命名）mv file1 file2        当前目录存在file1，file2，因此将file1的内容覆盖到file2中  ；mv test1.txt mydoc1   将test1.txt移动到mydoc1目录中 （当前目录存在mydoc1目录，移动）mv test1.txt test3.txt mydoc3  移动多个文件到mydoc3目录中mv mydoc1 mydoc2  当前目录存在mydoc2目录，因此移动目录mydoc1到mydoc2目录中mv mydoc7 mydoc8  当前目录不存在mydoc8目录，因此将mydoc7重命名为mydoc8  }复制文件/目录：cp file1 file2    复制一个文件，将file1复制且名字改为file2，文件内容不变 cp  -r dir1 dir2  递归复制dir1目录下的所有文件及文件夹至dir2目录下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="三、查看文件内容命令："><a href="#三、查看文件内容命令：" class="headerlink" title="三、查看文件内容命令："></a>三、查看文件内容命令：</h4><pre class="line-numbers language-none"><code class="language-none">cat file1   从第一个字节开始正向查看文件file1的内容 (一次性显示文件）tac file1   从最后一行开始反向查看一个文件的内容 cat&gt;newfile 新建一个文件，且可以输入内容，ctrl+C结束编辑并保存cat file1 file2 &gt;newfile     将file1和file2文件合并，合并到新的newfile文件中保存起来echo ‘test file ’ &gt; filename 新建一个文件filename并往文件里面写入内容：test filetouch filename 生成一个文件名为filename的空文件more file1     查看一个长文件的内容 ，分页查看，显示满一页时暂停，此时可按空格健,继续显示下一个画面，按Q停止显示less file1 类似于 ‘more’ 命令，不同的是 less 允许使用者用键盘方向键往回看 ，退 出用ctrl+zhead  命令用于显示文件的开头的内容 参数：-n&lt;数字&gt;：指定显示头部内容的行数； -c&lt;字符数&gt;：指定显示头部内容的字符数；head  -n  2 abc.txt 显示前2行； head  -c  2 abc.txt 显示前2个字符；tail  命令用于显示文件的尾部的内容 tail  -f  abc.txt     动态显示文件内容(默认后10行);tail  -n  10 abc.txt  显示文件后10行du -h filename  查看文件占用磁盘空间大小du -h dirname   查看目录下所有的目录占用磁盘空间大小grep  在指定的文本文件中查找指定的字符串，是一个强大的文本grep this is new2.txt，        在new2.txt文本中返回包括字符串“this is”的行。grep  –E  “this|is “ new2.txt，在new2.txt文本中返回包括字符串“this” 和”is”的行。|    Linux所提供的管道符“|”将两个命令隔开，管道符左边命令的输出就会作为管道符右边命令的输入(将管道左边的输出进一步按照管道右边的关键字找出来)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="四、文件搜索命令："><a href="#四、文件搜索命令：" class="headerlink" title="四、文件搜索命令："></a>四、文件搜索命令：</h4><pre class="line-numbers language-none"><code class="language-none">find  / -name filename   从 ‘/’ 根目录查找名为filename的文件（注意/后有空格，绝对路径）find  .  -name  filename 查询当前目录下文件名称为filename的文件（相对路径）find  /  -user username  搜索属于文件属主的文件（注意/后有空格）find   /user/local   -name \*.txt 搜索以 '.txt' 结尾的文件find  . -size +6000c 在当前目录下查找大于6k的文件 （c小写，字节的意思）find  . -size -6000c 在当前目录下查找小于6k的文件find  /root/dir -size  6000c  在“/root/dir”目录下查找等于6k的文件使用find组合命令查询/tmp下的文件或是文件夹的个数 查询/tmp下的文件个数：  find  /tmp  -type f |wc  –l查询/tmp下的文件夹个数: find  /tmp  -type d |wc  –l说明：type的参数：f为文件，d为目录         备注：文件的大小其实就是文件内容实际具有的字节数，它以Byte为衡量单位，只要文件内容不发生变化，文件大小就不会发生变化。但文件在磁盘上的所占空间却不是以Byte为衡量单位的，它最小的计量单位是块（block），windows空间大小是簇(Cluster)”，它们默认都是以4kB为单位划分存储的。普通文件：存储普通数据，一般就是字符串。 目录文件：是一种特殊的文件，它存储了一张表，该表存储的就是该目录下的所有文件名、文件及目录的基本信息，包含时间、档名、使用者及群组等。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="五、打包和压缩文件命令1："><a href="#五、打包和压缩文件命令1：" class="headerlink" title="五、打包和压缩文件命令1："></a>五、打包和压缩文件命令1：</h4><pre class="line-numbers language-none"><code class="language-none">tar：打包命令，将多个文件整成一个文件，常用作备份或发布安装包，可   以在打包的同时调用gzip或者bzip2进行压缩gzip, bzip2： 压缩程序，gzip的速度快一些，bzip2要压得小一些。压缩率：bzip2 &gt; gzip &gt; zip<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>打包和压缩文件命令2：</strong></p><pre class="line-numbers language-none"><code class="language-none">gzip命令命令格式：gzip [参数] 压缩（解压缩）文件名参数：若没有加上任何参数，gzip将执行压缩操作，压缩完文件后会产生.gz 的压缩文件，并删除原始的文件-d 将压缩文件解压。-r 递归压缩/解压目录中文件示例：压缩： gzip filename解压1：gunzip filename.gz解压2：gzip -d filename.gz  解压后，原压缩文件被删除gzip file1 file2     压缩2个文件gzip -d file1.gz  file2.gz    解压缩2个文件    gzip *     分别压缩当前目录下所有文件gzip –d *  解压当前目录下的所有文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>打包和压缩文件命令3：</strong></p><pre class="line-numbers language-none"><code class="language-none">bzip2命令命令格式：bzip2 [参数] 文件名参数：若没有加上任何参数，bzip2将执行压缩操作，压缩完文件后会产生.bz2的压缩文件，并删除原始的文件-d ：执行解压缩 （ decompress解压缩的首写字母 ）示例：压缩： bzip2     filename解压1：bzip2 -d  filename.bz2解压2：bunzip2   filename.bz2bzip2 file1 file2     压缩2个文件   bzip2  -d file1.bz2  file2.bz2   解压缩2个文件bzip2 *       分别压缩当前目录下所有文件bzip2 –d  *   解压当前目录下的所有文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>打包和压缩文件命令4：</strong></p><pre class="line-numbers language-none"><code class="language-none">tar命令命令格式：tar [-参数]  [压缩打包文件时新名称] [欲压缩的源文件]参数：-c ：打包（建立压缩文件名，产生新文件）-x ：解包-z ：用 gzip  压缩-j ：用 bzip2 压缩-v ：压缩的过程中显示详细信息-f ：指定一个文件名，在 f 之后要立即接文件名-tf：显示一个包的内容示例： 打包：tar  -cvf   Newname.tar   sourcefile 解包：tar  -xvf   Newname.tar（注：tar是打包，不是压缩！）打包后立即压缩：tar  -jcvf  Newname.tar.bz2    sourcefile解包并解压：   tar  -jxvf  Newname.tar.bz2显示一个包中的内容: tar -tf  package.tar 参数-f是必须的-f: 指定文件的名字，切记，这个参数放在最后面，它的后面只能跟文件名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>打包压缩文件命令5：</strong></p><pre class="line-numbers language-none"><code class="language-none">几种常用的格式tar -cvf   package.tar  file1 将file1打包并起包名字为package.tar ，打包一个文件tar -cvf   package.tar  file1 file2 dir1 创建一个包含了 ‘file1’, ‘file2’ 以及 ‘dir1’的包（其中dir1为目录），打包多个文件tar -cvf package.tar *  将当前目录下所有文件及目录一起打包，包名为package.tartar -xvf package.tar 解包 tar -xvf package.tar -C  /home/ccc/mydoc1 将打包文件释放到 /home/ccc/mydoc1目录下 tar -jcvf  package.tar.bz2 dir1 创建一个bzip2格式的压缩包 tar -jxvf  package.tar.bz2      解压一个bzip2格式的压缩包 tar -zcvf  package.tar.gz dir1  创建一个gzip格式的压缩包 tar -zxvf  package.tar.gz       解压一个gzip格式的压缩包 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>打包和压缩文件6：</strong></p><pre class="line-numbers language-none"><code class="language-none">zip file1.zip file1 创建一个zip格式的压缩包 zip -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个zip格式的压缩包 unzip file1.zip     解压一个zip格式压缩包 zip    压缩unzip  解压工具<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>打包和压缩文件命令7：</strong></p><pre class="line-numbers language-none"><code class="language-none">解压命令总结   *.gz         用 gzip  -d （或者gunzip） 解压   *.bz2        用 bzip2 -d （或者用bunzip2） 解压   *.tar        用 tar –xvf  解包   *.tar.gz     用 tar –zxvf 解包且解压   *.tar.bz2    用tar –jxvf  解包且解压   *.zip        用 unzip 解压<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="六、YUM在线安装WGET在线下载命令："><a href="#六、YUM在线安装WGET在线下载命令：" class="headerlink" title="六、YUM在线安装WGET在线下载命令："></a>六、YUM在线安装WGET在线下载命令：</h4><pre class="line-numbers language-none"><code class="language-none">Yum（全称为 Yellow dog Updater, Modified）是一个RedHat、CentOS中的Shell前端软件包管理器。基于RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。-q  静默执行,不显示安装过程  -t   忽略错误    -y  自动应答yesyum    install 包名        ------下载并安装一个rpm包 yum -y install 包名        ------自动下载安装并默认选择y，全自动（支持*） yum remove package_name 删除一个已经安装好了的rpm包 yum list installed      列出当前系统中已经安装的所有包 yum search package_name 在远端服务器rpm仓库中搜寻软件包 适用CentOS, Redhat及类似系统<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">Wget    是一个下载文件的工具,支持断点下载，同时支持FTP和HTTP等方式wget -O 下载并以不同的文件名保存 例：wget -O  wordpress.zip  http://cn.wordpress.org/wordpress-3.1-zh_CN.zip 下载链接地址内容，并命名为wordpress.zip<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="七、显示系统信息命令："><a href="#七、显示系统信息命令：" class="headerlink" title="七、显示系统信息命令："></a>七、显示系统信息命令：</h4><pre class="line-numbers language-none"><code class="language-none">uname -m  显示机器的cpu架构uname -a  显示正在使用的内核版本 getconf LONG_BIT  显示操作系统所使用的位数（数字显示）cat /proc/cpuinfo 显示CPU 的信息 cat /proc/version 显示内核的版本 (可以查看位数） cat /etc/redhat-release 查看centos版本date     显示系统日期 cal 2007 显示2007年的日历表 date 041217002007.00 设置日期和时间 - 月日时分年.秒  ，设置系统时间<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="八、查看磁盘和内存空间命令："><a href="#八、查看磁盘和内存空间命令：" class="headerlink" title="八、查看磁盘和内存空间命令："></a>八、查看磁盘和内存空间命令：</h4><pre class="line-numbers language-none"><code class="language-none">磁盘使用情况du  显示每个文件和目录的磁盘占用空间（计算的大小就是当前认为存在的所有文件大小的累 加和，不包含已删除文件所占用空间。占用空间非实际文件大小）参数-k  以KB为单位显示内存使用情况。 （默认单位）  命令示例： du –k /目录-m  以MB为单位显示内存使用情况。  命令示例：du -m /目录-h  以合适的列表方式显示df  显示磁盘文件的可用空间（通过查看文件系统磁盘块分配图得出总块数与剩余块数的总空间）参数-k  以KB为单位显示内存使用情况。 （默认单位）-m  以MB为单位显示内存使用情况。-h  以合适的列表方式显示<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">内存使用情况命令free 显示系统使用和空闲的内存情况参数-k   以KB为单位显示内存使用情况。 （默认单位）-m   以MB为单位显示内存使用情况。-g   以GB为单位显示内存使用情况。 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="九、网络命令："><a href="#九、网络命令：" class="headerlink" title="九、网络命令："></a>九、网络命令：</h4><pre class="line-numbers language-none"><code class="language-none">ifconfig eth0      显示一个以太网卡的配置 ifconfig eth0 up   启用一个 'eth0' 网络设备 ifconfig eth0 down 禁用一个 'eth0' 网络设备ifconfig           查看本地IP地址ping 对方IP         测试从本机到对方网络的连通性<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="十、系统管理命令："><a href="#十、系统管理命令：" class="headerlink" title="十、系统管理命令："></a>十、系统管理命令：</h4><pre class="line-numbers language-none"><code class="language-none">groups  显示当前用户所在组ps      显示进程状态（Process Status）kill  pid   停止某进程kill -9 pid 强制杀掉进程pkill -9  java 强制杀掉所有Java进程su  权限转换为指定使用者    示例：su root 切换到root用户hostname 显示主机名称clear    清屏 –翻到下一页reset    清屏 ---清空所有历史命令top 动态的显示当前系统中耗费资源最多的进程( cpu/内存等）top 命令是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器。top是一个动态显示过程,即可以通过用户按键来不断刷新当前状态<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="十一、ps命令详解："><a href="#十一、ps命令详解：" class="headerlink" title="十一、ps命令详解："></a>十一、ps命令详解：</h4><pre class="line-numbers language-none"><code class="language-none">ps 用来显示当前进程的状态命令参数：-a  显示同一终端下的所有程序-e  显示所有进程 f   显示程序间的关系u   指定用户的所有进程-C  显示进程的真实名称-u  usrname 显示指定用户的进程-x   通常与 a 这个参数一起使用，可列出较完整信息-au  显示较详细的资讯-aux 显示所有包含其他使用者的行程 ，正在内存中的程序ps aux  --sort=-pcpu|head -5  显示前4个消耗了大部分的CPU进程（有两个-，连起来）ps –ef|grep firefox  查找firefox进程较多使用格式：ps  –ef Ps  –auxPs  –C 进程名： 查找指定进程的PIDUID：用户ID   PID:进程ID  PPID: 父进程  C: CPU占用率 STIME: 系统启动时间   TTY登入者的终端机位置      TIME：耗时  CMD: COMMAND命令，行为 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="十二、关机命令："><a href="#十二、关机命令：" class="headerlink" title="十二、关机命令："></a>十二、关机命令：</h4><pre class="line-numbers language-none"><code class="language-none">关机 (系统的关机、重启以及注销 ) shutdown -h now 关闭系统shutdown -h hours:minutes &amp; 按预定时间关闭系统 shutdown -c     取消按预定时间关闭系统 shutdown -r now 重启(1) reboot 重启(2) halt   关机后关闭电源logout 注销 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="十三、shell快捷键："><a href="#十三、shell快捷键：" class="headerlink" title="十三、shell快捷键："></a>十三、shell快捷键：</h4><pre class="line-numbers language-none"><code class="language-none">ctrl+a: 光标移到行首ctrl+e: 光标移到行尾ctrl+c: 杀死当前进程，退出当前操作。ctrl+d: 退出当前 Shell↑ ：自动打印出前次输入过的命令Linux如何快速跳转到文档开头或者末尾输入 gg 命令，光标会移动到文档开头 ；输入 G 命令，光标会移动到文档末尾；另外可以敲击 上下键、Page UP、Page Down 键快速查看文档；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>包管理工具及在线安装：</strong></p><pre class="line-numbers language-none"><code class="language-none">软件包管理工具作用是提供在操作系统中安装，升级，卸载需要的软件的方法，并提供对系统中所有软件状态信息的查询。Linux软件包，常见的格式包括有rpm、tar、gz、bz2等rpm是RedHat Package Manager（RedHat软件包管理工具）的缩写，可直接安装.以tar、tar.gz等格式发布的Linux软件，这几类软件包的实质都是将一堆文件进行打包之后，再经过压缩处理而成，因此，要安装这几类格式的软件包时，都需要经过相应的解压缩及解包的步骤。   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>vim编辑器简介：</strong></p><pre class="line-numbers language-none"><code class="language-none">Vim是一个类似于Vi的著名的功能强大、高度可定制的文本编辑器，在Vi的基础上改进和增加了很多特性VIM的运行模式 基本模式：可以移动光标，查看文件，不能编辑插入模式：基本模式下，输入 i 进入插入模式，可以编辑文本信息命令模式：在基本模式下，输入 “：” 进行命令模式，可以输入命令（保存文件需要回到命令模式，接收命令）其它模式返回到基本模式：按”Esc”键，任何模式之间切换，需要先回到基本模式<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="十四、vim编辑器使用："><a href="#十四、vim编辑器使用：" class="headerlink" title="十四、vim编辑器使用："></a>十四、vim编辑器使用：</h4><pre class="line-numbers language-none"><code class="language-none">VIM 常用命令:q  直接退出vi:wq 保存后退出vim ，按Enter回车键（也可以先保存：w 后退出：q）:q! 强制退出，不保存:set number     在编辑文件显示行号:set nonumber 在编辑文件不显示行号:e  filename    打开当前目录下的文件:e   /user/local/filename  打开绝对路径下的文件:w filename  将当前内容保存名称为filename的文件（一般是先vim进来的情况），再按:wq保存退出---------------------------vim filename     打开文档（如没有，则表示新建）Vim newfile      新建空文件（执行：wq命令则会生成一个空文件，否则不生成）vim /usr/local/filename 绝对路径      vim + n filename 普通方式打开文档后，定位第n行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="十五、用户和组-账户管理："><a href="#十五、用户和组-账户管理：" class="headerlink" title="十五、用户和组 账户管理："></a>十五、用户和组 账户管理：</h4><p>linux操作系统是一个多用户操作系统，它允许多用户同时登录到系统上并使用资源。系统会根据账户来区分每个用户的文件，进程，任务和工作环境，使得每个用户工作都不受干扰。</p><p><strong>1.用户和组群账户管理：</strong></p><pre class="line-numbers language-none"><code class="language-none">用户账户超级用户账户：管理员在系统上的任务是对普通用户和整个系统进行管理。对系统具有绝对的控制权，能够对系统进行一切操作，root就是超级用户，它具有等同于操作系统的权限。普通用户账户：普通用户账号需要由root用户或其他管理员用户创建，拥有的权限受到一定限制，一般只在用户自己的宿主目录中有完全权限。群组账户 私有组：当创建一个用户时没有指定属于哪个群组，Linux就会建立一个与用户同名的私有群组，此私有组只含有该用户。标准组：当创建一个用户时可以选定一个标准群组，如果一个用户同时属于多个群组时，登录后所属的组为主群组，其他的为附加群组。UID和GID号UID: Linux系统中的每一个用户账号都有一个数字形式的身份标记，称为UID，对于系统核心来说，UID作为区分用户的基本依据，原则上每个用户的UID号应该是唯一的。root用户账号的UID号为固定值0.而程序用户账号的UID号默认在1-499之间，500-60000的UID号默认分配给普通用户账号使用。GID: 每一个组账号也有一个数字形式的身份标记，称为GID。root组账号的GID号为固定值0，而程序组账号的GID号默认在1-499之间，普通组账号使用的UID号默认为500-60000.普通用户、组账号使用的默认UID、GID号范围定义在配置文件“/etc/login.defs”中。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>2.用户账户管理：</strong></p><pre class="line-numbers language-none"><code class="language-none">使用命令行工具管理账户 useradd newuser    创建一个新用户 ，默认在home目录下passwd  newuser    回车，为新用户newuser设置密码，密码不回显passwd  –d  ddd    删除用户ddd的口令userdel -r  DDD    删除用户DDD，其家目录及文件一并删除useradd –u 1000 newuser  创建一个UID,GID为1000的新用户(默认GID=UID)usermod –u  [新UID] [用户账户]    修改用户ID为新IDusermod –u 552 ddd              将用户ddd的UID 更改为552usermod –g ccc aaa              将用户aaa更改归属到ccc用户的ccc组中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>3.组账户管理：</strong></p><pre class="line-numbers language-none"><code class="language-none">组账户维护命令 groupadd –g 550  mygroup1 创建新组，此时在/etc/group文件中产生一个组ID（GID）是550的项目groupdel group1 删除用户组group1groupmod –g 551 mygroup1 更改mygroup1的组ID为551<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">用户和组状态命令 su 用户名  切换用户账户su rootsu - root “-”前后需要有空格id 用户名    显示用户的UID，GIDwhoami      显示当前用户名称groups      显示用户所属组sudo   临时赋予当前用户root权限，允许普通用户执行一些或者全部的root命令的一个工具sudo   cat  /etc/sudoers#rpm –q sudo   检测是否安装了sudoSudo配置文件为sudoers  (需要使用vim编辑此配置文件，在权限处添加一行user权限，和root一致)cat  /etc/sudoers<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="十六、chmod命令及权限："><a href="#十六、chmod命令及权限：" class="headerlink" title="十六、chmod命令及权限："></a>十六、chmod命令及权限：</h4><pre class="line-numbers language-none"><code class="language-none">chmod命令用来变更文件或目录的权限。文件或目录权限的控制分别为读取、写入、执行3种权限范围的表示法如下：u User， 即文件或目录的拥有者；g Group，即文件或目录的所属群组；o Other，除了文件或目录拥有者或所属群组之外，其他用户；a All，  即全部的用户，包含拥有者，所属群组以及其他用户；r=读取属性　　    //值＝4w=写入属性　  　  //值＝2x=执行属性　　    //值＝1- 不具任何权限    //值=0示例：字母法和数字法写法chmod  u+x  file     给file的属主增加执行权限chmod  751  file     给file的属主分配读、写、执行(7)的权限，给file的所在组分配读、执行(5)的权限，给其他用户分配执行(1)的权限chmod u=rwx, g=rx, o=x  file  上例的另一种形式chmod -R u+r directory        递归地给directory目录下所有文件和子目录的属主分配读的权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="十七、ll命令详解："><a href="#十七、ll命令详解：" class="headerlink" title="十七、ll命令详解："></a>十七、ll命令详解：</h4><pre class="line-numbers language-none"><code class="language-none">ls –l  /  ll中显示的内容如下：-rwx rw- r-- .1 root root 1213 Feb 2 09:39 abc- 第一个字符代表文件（-）、目录（d），链接（l）- 其余字符每3个一组（rwx），读（r）、写（w）、执行（x）- 第一组rwx：文件所有者的权限是读、写和执行- 第二组rw-：与文件所有者同一组的用户的权限是读、写但不能执行- 第三组r--：其他用户的权限是读不能写和执行也可用数字表示为：r=4，w=2，x=1  因此rwx=4+2+1=7- 1    表示连接的文件数- root 表示用户- root 表示用户所在的组- 1213 表示文件大小（字节）- Feb 2 09:39 表示最后修改日期- abc  表示文件名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="十八、ln链接文件命令："><a href="#十八、ln链接文件命令：" class="headerlink" title="十八、ln链接文件命令："></a>十八、ln链接文件命令：</h4><pre class="line-numbers language-none"><code class="language-none">创建软链接即用 ：ln -s   原始文件或文件夹   目标文件或文件夹   举例： ln -s  /home/user/bak  /var/bak想要删除链接文件夹要用以下命令 rm   /var/bak 少了一个“ / ” 删除的就是链接文件, 也就是在文件的最后不要加上”/”注意创建和删除链接文件需要使用绝对路径<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stockings 论坛</title>
      <link href="/post/852bbecd.html"/>
      <url>/post/852bbecd.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Benefits for special lovers of foot fetish, stockings, panties，带给特殊爱好者兄弟们的福利。</p><blockquote><p>Q：522388574，领取密码。</p></blockquote><p>链接地址：</p><p>[<a href="https://www.5iyuanwei.org/forum.php">News]我爱原味网 - 原味内衣，原味内裤，原味丝袜，原味内内，高质量的原味论坛-我爱原味网</a></p><p><a href="https://www.sizhifu.net/forum.php">【新提醒】全球丝袜交流论坛|丝袜吧-丝之缚</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> stockings forum </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali基本设置</title>
      <link href="/post/edaa2e07.html"/>
      <url>/post/edaa2e07.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="安装完kali-Linux-之后的基本设置："><a href="#安装完kali-Linux-之后的基本设置：" class="headerlink" title="安装完kali Linux 之后的基本设置："></a>安装完kali Linux 之后的基本设置：</h4><p>Kali Linux自带了几个网络服务，它们是非常有用的。但是默认是禁用的。在这里，将介绍使用各种方法设置并启动每个服务。</p><ol><li>启动Apache服务</li></ol><p>启动Apache服务。执行命令如下所示：</p><pre class="line-numbers language-none"><code class="language-none">[email protected]:~# service apache2 start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输出信息如下所示：</p><pre class="line-numbers language-none"><code class="language-none">[ok] Starting web server: apache2.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>启动Secure Shell（SSH）服务</li></ol><p>启动Secure Shell（SSH）服务。执行命令如下所示：</p><pre class="line-numbers language-none"><code class="language-none">[email protected]:~# service ssh start[ok] Starting OpenBSD Secure Shell server: sshd.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="3"><li>启动FTP服务</li></ol><p>FTP服务默认是没有安装的，所以首先需要安装FTP服务器。在Kali Linux操作系统的软件源中默认没有提供FTP服务器的安装包，这里需要配置一个软件源。配置软件源的具体操作步骤如下所示。</p><p>（1）设置APT源。向软件源文件/etc/apt/sources.list中添加以下几个镜像网站。执行命令如下所示：</p><pre class="line-numbers language-none"><code class="language-none">[email protected]:~# vi /etc/apt/sources.listdeb http://mirrors.neusoft.edu.cn/kali/ kali main non-free contribdeb-src http://mirrors.neusoft.edu.cn/kali/ kali main non-free contribdeb http://mirrors.neusoft.edu.cn/kali-security kali/updates main contrib non-free<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>添加完以上几个源后，将保存sources.list文件并退出。在该文件中，添加的软件源是根据不同的软件库分类的。其中，deb指的是DEB包的目录；deb-src指的是源码目录。如果不自己看程序或者编译的话，可以不用指定deb-src。由于deb-src和deb是成对出现的，可以不指定deb-src，但是当需要deb-src的时候，deb是必须指定的。</p><p>（2）添加完软件源，需要更新软件包列表后才可以使用。更新软件包列表，执行命令如下所示：</p><pre class="line-numbers language-none"><code class="language-none">[email protected]:~# apt-get update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更新完软件列表后，会自动退出程序。</p><p>（3）安装FTP服务器。执行命令如下所示：</p><pre class="line-numbers language-none"><code class="language-none">[email protected]:~# apt-get install pure-ftpd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装成功FTP服务器，就可以启动该服务了。执行命令如下所示：</p><pre class="line-numbers language-none"><code class="language-none">[email protected]:~# service pure-ftpd start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>   4.停止服务</p><p>停止一个服务的语法格式如下所示：</p><pre class="line-numbers language-none"><code class="language-none">service &lt;servicename&gt; stop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><servicename>表示用户想要停止的服务。</servicename></p><p>停止Apache服务，执行命令如下所示：</p><pre class="line-numbers language-none"><code class="language-none">[email protected]:~# service apache2 stop[ ok ] Stopping web server: apache2 … waiting.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>从输出的信息中，可以看到Apache服务停止成功。</p><p>   5.设置服务开机启动</p><p>设置服务开机启动的语法格式如下所示：</p><pre class="line-numbers language-none"><code class="language-none">update-rc.d -f &lt;servicename&gt; defaults<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><servicename>表示用户想要开机启动的服务。</servicename></p><p>设置SSH服务开启自启动：</p><pre class="line-numbers language-none"><code class="language-none">[email protected]:~# update-rc.d -f ssh defaultsupdate-rc.d: using dependency based boot sequencingupdate-rc.d: warning: default stop runlevel arguments (0 1 6) do not match ssh Default-Stop values (none)insserv: warning: current start runlevel(s) (empty) of script `ssh' overrides LSB defaults (2 3 4 5).insserv: warning: current stop runlevel(s) (2 3 4 5) of script `ssh' overrides LSB defaults (empty).<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从输出的信息中可以看到，SSH服务默认启动了2、3、4和5运行级别。则以后系统重启后，SSH服务将自动运行。</p><p>转载 文章链接：<a href="https://wizardforcel.gitbooks.io/daxueba-kali-linux-tutorial/content/9.html">https://wizardforcel.gitbooks.io/daxueba-kali-linux-tutorial/content/9.html</a></p><p>更多kali资料1： <a href="https://linuxhint.com/kali-linux-tutorial/">https://linuxhint.com/kali-linux-tutorial/</a></p><p>更多kali资料2     <a href="https://www.javatpoint.com/kali-linux">https://www.javatpoint.com/kali-linux</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> linux kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>暗网部分内容展示</title>
      <link href="/post/d5eb578d.html"/>
      <url>/post/d5eb578d.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>上过网的你一定听说过关于暗网的一些传闻，“暗网”对普通人来说遥不可及，它与我们平常使用的互联网资源没有交集，这也就是它的神秘之处——找不到入口，寻不到踪迹。</strong></p><p><strong>常见的访问暗网的形式是通过Tor——一个匿名性和隐私性非常强的浏览器，用户之所以选择这个浏览器，是因为其采用了洋葱路由加密网络技术，简称洋葱路由。</strong></p><p><strong>在暗网世界里，确实充斥着犯罪，贩卖枪支弹药、毒品、色情淫秽录像、还有数字币交易、证件伪造、假币等等</strong></p><p><strong>如果你想知道暗网世界到底是什么样的，那么我可以把我知道的一些内容告诉你，以下是暗网中的一些不法网站</strong></p><h5 id="1-社工库：贩卖个人隐私的事件在国内有案例，不知道的自行百度，大家一定要保护好自己的隐私，这个网站在暗网上疑似是诈骗网站。"><a href="#1-社工库：贩卖个人隐私的事件在国内有案例，不知道的自行百度，大家一定要保护好自己的隐私，这个网站在暗网上疑似是诈骗网站。" class="headerlink" title="1.社工库：贩卖个人隐私的事件在国内有案例，不知道的自行百度，大家一定要保护好自己的隐私，这个网站在暗网上疑似是诈骗网站。"></a>1.社工库：贩卖个人隐私的事件在国内有案例，不知道的自行百度，大家一定要保护好自己的隐私，这个网站在暗网上疑似是诈骗网站。</h5><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a19.png"></p><h5 id="2-Slik-Road4-翻译为：丝绸之路4，国内已打掉之前的一个最大犯罪平台，可百度查找案例。"><a href="#2-Slik-Road4-翻译为：丝绸之路4，国内已打掉之前的一个最大犯罪平台，可百度查找案例。" class="headerlink" title="2.Slik Road4  翻译为：丝绸之路4，国内已打掉之前的一个最大犯罪平台，可百度查找案例。"></a>2.Slik Road4  翻译为：丝绸之路4，国内已打掉之前的一个最大犯罪平台，可百度查找案例。</h5><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a20.png"></p><h5 id="3-毒品、枪支、假币出售网站：比特币交易"><a href="#3-毒品、枪支、假币出售网站：比特币交易" class="headerlink" title="3.毒品、枪支、假币出售网站：比特币交易"></a>3.毒品、枪支、假币出售网站：比特币交易</h5><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a21.png"></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a22.png"></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a23.png"></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a24.png"></p><h5 id="4-某色情服务网站，需购买会员，可定制内容服务。会员费：0-001比特币。"><a href="#4-某色情服务网站，需购买会员，可定制内容服务。会员费：0-001比特币。" class="headerlink" title="4.某色情服务网站，需购买会员，可定制内容服务。会员费：0.001比特币。"></a>4.某色情服务网站，需购买会员，可定制内容服务。会员费：0.001比特币。</h5><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/6.png"></p><p><strong>如果大家有兴趣去浏览暗网，一定要注意安全，不要轻易做交易，上面骗子也很多。一些酒店开房记录就是在暗网进行交易的。黑客通过技术手段获得了客户资料，然后在暗网上进行贩卖，获取牟利。总之访问暗网满足一下好奇心是可以的，但是最好别在上面进行交易或者传播。毕竟网络不是法外之地。</strong></p><p><u>（本文仅代表个人观点和建议，如有雷同，纯属巧合，不喜勿喷，谢谢）</u></p><p>暗网导航网址：<a href="https://onion666.com/">https://onion666.com</a> ，国内不可访问。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 暗网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux kali安装tor浏览器</title>
      <link href="/post/830d6b44.html"/>
      <url>/post/830d6b44.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>特别说明：以下方法，仅供学习参看，不能用于非法行为，如使用，与本人无关，如不能接受，请不要使用本人的方法进行操作</strong></p><h4 id="linux-kali安装tor教程，在虚拟机环境下安装。"><a href="#linux-kali安装tor教程，在虚拟机环境下安装。" class="headerlink" title="linux kali安装tor教程，在虚拟机环境下安装。"></a>linux kali安装tor教程，在虚拟机环境下安装。</h4><p>两种情况：一种是本地tor没有安装包，一种是有安装包</p><h5 id="一、没有安装包的时候在linux-kali下载安装"><a href="#一、没有安装包的时候在linux-kali下载安装" class="headerlink" title="一、没有安装包的时候在linux kali下载安装"></a>一、没有安装包的时候在linux kali下载安装</h5><p>输入：</p><pre class="line-numbers language-none"><code class="language-none">sudo apt update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入：</p><pre class="line-numbers language-none"><code class="language-none">sudo apt install -y tor torbrowser-launcher<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入：</p><pre class="line-numbers language-none"><code class="language-none">torbrowser-launcher<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a15.png"></p><h5 id="二、有安装包：直接上传到linux-kaili-根目录下"><a href="#二、有安装包：直接上传到linux-kaili-根目录下" class="headerlink" title="二、有安装包：直接上传到linux kaili 根目录下"></a>二、有安装包：直接上传到linux kaili 根目录下</h5><p>1.解压：</p><pre class="line-numbers language-none"><code class="language-none">tar xvJf tor-browser-linux64-8.0.3_zh-CN.tar.xz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.找到这个文件夹：</p><pre class="line-numbers language-none"><code class="language-none">cd /root/tor-browser_zh-CN/Browser<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.编辑 star-tor-browser文件      </p><pre class="line-numbers language-none"><code class="language-none">vim start-tor-browser<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.然后找到这个位置，把if [ “id -u” -eq 0 ]; then中的0改成 1</p><pre class="line-numbers language-none"><code class="language-none">if [ "`id -u`" -eq 0 ]; then        complain "The Tor Browser Bundle should not be run as root.  Exiting."        exit 1fi   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>5.然后保存退到上级目录，执行</p><pre class="line-numbers language-none"><code class="language-none">./start-tor-browser.desktop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动完成。</p><p>6.在linux kali本地文件夹找到压缩包，解压，打开之后找到浏览器图标，点击打开</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a16.png"></p><p>7.配置：</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a17.png"></p><p>8.完事直接等待连接就行了，出现下面的图片，代表成功。</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/a18.png"></p><p><strong>补充：</strong></p><p>Linux kali 安装中文输入法：</p><pre class="line-numbers language-none"><code class="language-none">apt install fcitx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">apt-get install fcitx-googlepinyin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完，重启reboot</p><p>重启后桌面右上角顶部有个切换输入法的图标，选择谷歌拼音。</p><p>Ctrl + 空格 切换输入法</p>]]></content>
      
      
      
        <tags>
            
            <tag> 暗网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github访问超时</title>
      <link href="/post/cd7f88ce.html"/>
      <url>/post/cd7f88ce.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/v.png"></p><h5 id="ping-github请求超时解决方案"><a href="#ping-github请求超时解决方案" class="headerlink" title="ping github请求超时解决方案"></a>ping github请求超时解决方案</h5><p>打开网址 <a href="https://www.ipaddress.com/">https://www.ipaddress.com/</a></p><p>输入 github.com 或者 github.global.ssl.fastly.net</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/m.png" alt="例如 查询github.global.ssl.fastly.net得到的ip"></p><p>将得到的ip地址放入到host文件中</p><p>用管理员权限(Win10)打开 C:\Windows\System32\drivers\etc 目录下的 host文件</p><p>在文件末尾加上</p><p>140.82.113.4  github.com</p><p>199.232.69.194 github.global.ssl.fastly.net</p><p> 整体效果：</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/l.png" alt="l"></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/p.png" alt="p"></p><p>修改完就可以正常访问github了</p><p><em>注意：通过这种解决方案并不能完美解决github访问超时，主要取决于你当前网络状况。</em></p>]]></content>
      
      
      
        <tags>
            
            <tag> github超时 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建</title>
      <link href="/post/2ce4da46.html"/>
      <url>/post/2ce4da46.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​    <!--**注意点**：**hexo模板+matery主题部署到github，过程中很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，hexo有2种配置文件，一个是根目录_config.yml（站点配置），theme下的 _config.yml（主题配置）**--></p><h4 id="一、需要用到的三种工具：git、github、node-js"><a href="#一、需要用到的三种工具：git、github、node-js" class="headerlink" title="一、需要用到的三种工具：git、github、node.js"></a><strong>一、需要用到的三种工具：git、github、node.js</strong></h4><p><strong>1.下载安装node.js</strong></p><p>官网下载：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a> </p><p>安装教程：<a href="https://blog.csdn.net/qq_40732336/article/details/120253542">https://blog.csdn.net/qq_40732336/article/details/120253542</a></p><p>安装后验证：<code>node  -v</code>   （cmd命令行输入进行验证是否安装成功，出现版本号就是安装成功）</p><p><strong>2.下载安装git</strong></p><p>官网下载:  <a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a> </p><p>安装教程：<a href="https://blog.csdn.net/secretstarlyp/article/details/106576882">https://blog.csdn.net/secretstarlyp/article/details/106576882</a></p><p>安装后验证：<code>git  - -version</code></p><p>命令行安装cnpm</p><p><code>npm install -g cnpm --registry==https://registry.npm.taobao.org</code>（全局配置淘宝镜像）</p><p>安装后验证：<code>npm  -v</code> </p><p>命令行安装hexo模板</p><p><code>cnpm install -g hexo-cli</code></p><p>安装后验证：<code>hexo  -v</code> </p><img src="/post/2ce4da46/0.png" class="" title="出现版本号代表安装成功">]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo图片不显示问题</title>
      <link href="/post/a8716cd9.html"/>
      <url>/post/a8716cd9.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="我的博客地址：https-hejihui1-github-io"><a href="#我的博客地址：https-hejihui1-github-io" class="headerlink" title="我的博客地址：https://hejihui1.github.io"></a>我的博客地址：<a href="https://hejihui1.github.io/">https://hejihui1.github.io</a></h4><h4 id="解决hexo无法显示图片问题："><a href="#解决hexo无法显示图片问题：" class="headerlink" title="解决hexo无法显示图片问题："></a>解决<strong>hexo</strong>无法显示<strong>图片</strong>问题：</h4><p><strong>1</strong> <strong>把主页配置文件<code>_config.yml</code> 里的<code>post_asset_folder:</code>这个选项设置为<code>true</code></strong></p><p><strong>2 在你的<a href="https://so.csdn.net/so/search?q=hexo&amp;spm=1001.2101.3001.7020">hexo</a>目录下执行<code>npm install hexo-asset-image --save</code>，这是下载安装一个可以上传本地图片的插件</strong></p><p><strong>但是这个插件的内容需要修改，不然可能会出问题</strong></p><p><strong>打开/node_modules/hexo-asset-image/index.js，将内容更换为下面的代码</strong></p><pre class="line-numbers language-none"><code class="language-none">'use strict';var cheerio = require('cheerio');// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-stringfunction getPosition(str, m, i) {  return str.split(m, i).join(m).length;}var version = String(hexo.version).split('.');hexo.extend.filter.register('after_post_render', function(data){  var config = hexo.config;  if(config.post_asset_folder){    var link = data.permalink;if(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)   var beginPos = getPosition(link, '/', 1) + 1;else   var beginPos = getPosition(link, '/', 3) + 1;// In hexo 3.1.1, the permalink of "about" page is like ".../about/index.html".var endPos = link.lastIndexOf('/') + 1;    link = link.substring(beginPos, endPos);    var toprocess = ['excerpt', 'more', 'content'];    for(var i = 0; i &lt; toprocess.length; i++){      var key = toprocess[i];       var $ = cheerio.load(data[key], {        ignoreWhitespace: false,        xmlMode: false,        lowerCaseTags: false,        decodeEntities: false      });      $('img').each(function(){if ($(this).attr('src')){// For windows style path, we replace '\' to '/'.var src = $(this).attr('src').replace('\\', '/');if(!/http[s]*.*|\/\/.*/.test(src) &amp;&amp;   !/^\s*\//.test(src)) {  // For "about" page, the first part of "src" can't be removed.  // In addition, to support multi-level local directory.  var linkArray = link.split('/').filter(function(elem){return elem != '';  });  var srcArray = src.split('/').filter(function(elem){return elem != '' &amp;&amp; elem != '.';  });  if(srcArray.length &gt; 1)srcArray.shift();  src = srcArray.join('/');  $(this).attr('src', config.root + link + src);  console.info&amp;&amp;console.info("update link as:--&gt;"+config.root + link + src);}}else{console.info&amp;&amp;console.info("no src attr, skipped...");console.info&amp;&amp;console.info($(this));}      });      data[key] = $.html();    }  }});<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>3 执行<code>hexo new post "test"</code>来生成md博文时，<code>/source/_posts</code>文件夹内除了<code>test.md</code>文件还有一个名为<u>test</u>的文件夹</strong></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p><strong>4 最后在<code>test.md</code>中想引入图片时，先把图片复制到<u>test</u>这个文件夹中，然后只需要在test.md中按照markdown的格式引入图片：</strong></p><pre class="line-numbers language-none"><code class="language-none">![你想输入的替代文字](test/图片名.jpg)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>注意： test是这个md文件的名字，也是同名文件夹的名字。只需要有文件夹名字即可，不需要有什么绝对路径。你想引入的图片就只需要放入test这个文件夹内就好了，很像引用相对路径。</strong></p><p><strong>如果还是不显示，用以下方法再试试：（我是使用下面的方法成功的）</strong></p><p><strong>在markdown文件中使用如下格式进行图片的访问：</strong></p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">{% asset_img xxx.jpg This is an xxx image %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>*<em><strong>下图是我在hexo插入图片部署到github成功的一张截图：</strong></em></p><img src="/post/a8716cd9/2.png" class="" title="显示成功"><p>或者直接使用图床，Markdown格式插入就行。</p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/bd315c6034a85edf119240ed9a52aa2bdc5475f5.jpeg" alt="bd315c6034a85edf119240ed9a52aa2bdc5475f5"></p><p><img src="https://img-1311107137.cos.ap-guangzhou.myqcloud.com/img/mayi1.webp"></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
